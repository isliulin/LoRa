; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\rtc_main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\rtc_main.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS\Device\ST\STM32F0xx\Include -I..\CMSIS\Include -I..\stm32f03xx_HAL\Inc -I..\USER -I..\HAL\inc -I..\HAL\system -I..\Lib\LoRawan-node\misc -I..\Lib\LoRawan-node\crypto -I..\Lib\LoRawan-node\mac -I..\Lib\LoRawan-node\radio -I..\Lib\LoRawan-node\radio\sx1276 -I..\Lib -IE:\NBI项目\NBI_LoRa\LoRa版本备份\NB_LoRawan-V2.0.2：control-F030CC\MDK_5.12\RTE -ID:\mysaftware\keil_5.12\ARM\PACK\Keil\STM32F0xx_DFP\1.5.0\Device\Include -ID:\mysaftware\keil_5.12\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=518 -DSTM32F030xC -DUSE_HAL_DRIVER -DSTM32F030xC -DUSE_MODEM_LORA -DUSE_BAND_433 --omf_browse=.\objects\rtc_main.crf ..\TEST\rtc_main.c]
                          THUMB

                          AREA ||i.Error_Handler||, CODE, READONLY, ALIGN=1

                  Error_Handler PROC
;;;161      */
;;;162    void Error_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;163    {
;;;164      /* USER CODE BEGIN Error_Handler */
;;;165      /* User can add his own implementation to report the HAL error return state */
;;;166      while(1) 
000002  e7fe              B        |L1.2|
;;;167      {
;;;168      }
;;;169      /* USER CODE END Error_Handler */ 
;;;170    }
;;;171    
                          ENDP


                          AREA ||i.SystemClock_Config||, CODE, READONLY, ALIGN=2

                  SystemClock_Config PROC
;;;99     
;;;100    void SystemClock_Config(void)
000000  b530              PUSH     {r4,r5,lr}
;;;101    {
000002  b095              SUB      sp,sp,#0x54
;;;102    
;;;103      RCC_OscInitTypeDef RCC_OscInitStruct;
;;;104      RCC_ClkInitTypeDef RCC_ClkInitStruct;
;;;105      RCC_PeriphCLKInitTypeDef PeriphClkInit;
;;;106    
;;;107        /**Initializes the CPU, AHB and APB busses clocks 
;;;108        */
;;;109      RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
000004  2002              MOVS     r0,#2
000006  9009              STR      r0,[sp,#0x24]
;;;110      RCC_OscInitStruct.HSIState = RCC_HSI_ON;
000008  2001              MOVS     r0,#1
00000a  900c              STR      r0,[sp,#0x30]
;;;111      RCC_OscInitStruct.HSICalibrationValue = 16;
00000c  2010              MOVS     r0,#0x10
00000e  900d              STR      r0,[sp,#0x34]
;;;112      RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
000010  2002              MOVS     r0,#2
000012  9011              STR      r0,[sp,#0x44]
;;;113      RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
000014  0381              LSLS     r1,r0,#14
000016  9112              STR      r1,[sp,#0x48]
;;;114      RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL4;
000018  0481              LSLS     r1,r0,#18
00001a  9113              STR      r1,[sp,#0x4c]
;;;115      RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
00001c  2100              MOVS     r1,#0
00001e  9114              STR      r1,[sp,#0x50]
;;;116      if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
000020  a809              ADD      r0,sp,#0x24
000022  f7fffffe          BL       HAL_RCC_OscConfig
000026  2800              CMP      r0,#0
000028  d001              BEQ      |L2.46|
;;;117      {
;;;118        Error_Handler();
00002a  f7fffffe          BL       Error_Handler
                  |L2.46|
;;;119      }
;;;120    
;;;121        /**Initializes the CPU, AHB and APB busses clocks 
;;;122        */
;;;123      RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
00002e  2007              MOVS     r0,#7
000030  9005              STR      r0,[sp,#0x14]
;;;124                                  |RCC_CLOCKTYPE_PCLK1;
;;;125      RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
000032  2002              MOVS     r0,#2
000034  9006              STR      r0,[sp,#0x18]
;;;126      RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
000036  2000              MOVS     r0,#0
000038  9007              STR      r0,[sp,#0x1c]
;;;127      RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
00003a  9008              STR      r0,[sp,#0x20]
;;;128    
;;;129      if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
00003c  2101              MOVS     r1,#1
00003e  a805              ADD      r0,sp,#0x14
000040  f7fffffe          BL       HAL_RCC_ClockConfig
000044  2800              CMP      r0,#0
000046  d001              BEQ      |L2.76|
;;;130      {
;;;131        Error_Handler();
000048  f7fffffe          BL       Error_Handler
                  |L2.76|
;;;132      }
;;;133    
;;;134      PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_RTC;
00004c  480f              LDR      r0,|L2.140|
00004e  9001              STR      r0,[sp,#4]
;;;135      PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
000050  2000              MOVS     r0,#0
000052  9003              STR      r0,[sp,#0xc]
;;;136      if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
000054  a801              ADD      r0,sp,#4
000056  f7fffffe          BL       HAL_RCCEx_PeriphCLKConfig
00005a  2800              CMP      r0,#0
00005c  d001              BEQ      |L2.98|
;;;137      {
;;;138        Error_Handler();
00005e  f7fffffe          BL       Error_Handler
                  |L2.98|
;;;139      }
;;;140    
;;;141        /**Configure the Systick interrupt time 
;;;142        */
;;;143      HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
000062  f7fffffe          BL       HAL_RCC_GetHCLKFreq
000066  4605              MOV      r5,r0
000068  217d              MOVS     r1,#0x7d
00006a  00c9              LSLS     r1,r1,#3
00006c  f7fffffe          BL       __aeabi_uidivmod
000070  4604              MOV      r4,r0
000072  f7fffffe          BL       HAL_SYSTICK_Config
;;;144    
;;;145        /**Configure the Systick 
;;;146        */
;;;147      HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
000076  2004              MOVS     r0,#4
000078  f7fffffe          BL       HAL_SYSTICK_CLKSourceConfig
;;;148    
;;;149      /* SysTick_IRQn interrupt configuration */
;;;150      HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
00007c  2200              MOVS     r2,#0
00007e  4611              MOV      r1,r2
000080  1e50              SUBS     r0,r2,#1
000082  f7fffffe          BL       HAL_NVIC_SetPriority
;;;151    }
000086  b015              ADD      sp,sp,#0x54
000088  bd30              POP      {r4,r5,pc}
;;;152    
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      0x00010001

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;63     
;;;64     int main(void)
000000  f7fffffe          BL       HAL_Init
;;;65     {
;;;66     
;;;67       /* USER CODE BEGIN 1 */
;;;68     
;;;69       /* USER CODE END 1 */
;;;70     
;;;71       /* MCU Configuration----------------------------------------------------------*/
;;;72     
;;;73       /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
;;;74       HAL_Init();
;;;75     
;;;76       /* Configure the system clock */
;;;77     	SystemClock_Config();
000004  f7fffffe          BL       SystemClock_Config
;;;78       /* Initialize all configured peripherals */
;;;79     
;;;80       /* USER CODE BEGIN 2 */	
;;;81     	MX_USART1_UART_Init( );
000008  f7fffffe          BL       MX_USART1_UART_Init
;;;82     	
;;;83       /* USER CODE END 2 */
;;;84     
;;;85       /* Infinite loop */
;;;86       /* USER CODE BEGIN WHILE */
;;;87       while (1)
00000c  e006              B        |L3.28|
                  |L3.14|
;;;88       {
;;;89       /* USER CODE END WHILE */
;;;90     
;;;91       /* USER CODE BEGIN 3 */
;;;92     		printf("hello world weclome \r\n");
00000e  a004              ADR      r0,|L3.32|
000010  f7fffffe          BL       __2printf
;;;93     		HAL_Delay(1000);
000014  207d              MOVS     r0,#0x7d
000016  00c0              LSLS     r0,r0,#3
000018  f7fffffe          BL       HAL_Delay
                  |L3.28|
00001c  e7f7              B        |L3.14|
;;;94       }
;;;95       /* USER CODE END 3 */
;;;96     
;;;97     }
;;;98     
                          ENDP

00001e  0000              DCW      0x0000
                  |L3.32|
000020  68656c6c          DCB      "hello world weclome \r\n",0
000024  6f20776f
000028  726c6420
00002c  7765636c
000030  6f6d6520
000034  0d0a00  
000037  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\TEST\\rtc_main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_rtc_main_c_main____REV16|
#line 388 "..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_rtc_main_c_main____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_rtc_main_c_main____REVSH|
#line 402
|__asm___10_rtc_main_c_main____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
