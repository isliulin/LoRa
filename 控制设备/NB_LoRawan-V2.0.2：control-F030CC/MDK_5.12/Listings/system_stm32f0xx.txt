; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\system_stm32f0xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\system_stm32f0xx.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS\Device\ST\STM32F0xx\Include -I..\CMSIS\Include -I..\stm32f03xx_HAL\Inc -I..\USER -I..\HAL\inc -I..\HAL\system -I..\Lib\LoRawan-node\misc -I..\Lib\LoRawan-node\crypto -I..\Lib\LoRawan-node\mac -I..\Lib\LoRawan-node\radio -I..\Lib\LoRawan-node\radio\sx1276 -I..\Lib -IE:\NBI项目\NBI_LoRa\LoRa版本备份\NB_LoRawan-V2.0.2：control-F030CC\MDK_5.12\RTE -ID:\mysaftware\keil_5.12\ARM\PACK\Keil\STM32F0xx_DFP\1.5.0\Device\Include -ID:\mysaftware\keil_5.12\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=518 -DSTM32F030xC -DUSE_HAL_DRIVER -DSTM32F030xC -DUSE_MODEM_LORA -DUSE_BAND_433 --omf_browse=.\objects\system_stm32f0xx.crf ..\CMSIS\Device\ST\STM32F0xx\Source\Templates\system_stm32f0xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;259      */
;;;260    void SystemCoreClockUpdate (void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;261    {
;;;262      uint32_t tmp = 0, pllmull = 0, pllsource = 0, predivfactor = 0;
000002  2500              MOVS     r5,#0
000004  2400              MOVS     r4,#0
000006  2600              MOVS     r6,#0
000008  2700              MOVS     r7,#0
;;;263    
;;;264      /* Get SYSCLK source -------------------------------------------------------*/
;;;265      tmp = RCC->CFGR & RCC_CFGR_SWS;
00000a  4826              LDR      r0,|L1.164|
00000c  6840              LDR      r0,[r0,#4]
00000e  210c              MOVS     r1,#0xc
000010  4008              ANDS     r0,r0,r1
000012  4605              MOV      r5,r0
;;;266    
;;;267      switch (tmp)
000014  2d00              CMP      r5,#0
000016  d004              BEQ      |L1.34|
000018  2d04              CMP      r5,#4
00001a  d006              BEQ      |L1.42|
00001c  2d08              CMP      r5,#8
00001e  d12f              BNE      |L1.128|
000020  e007              B        |L1.50|
                  |L1.34|
;;;268      {
;;;269        case RCC_CFGR_SWS_HSI:  /* HSI used as system clock */
;;;270          SystemCoreClock = HSI_VALUE;
000022  4821              LDR      r0,|L1.168|
000024  4921              LDR      r1,|L1.172|
000026  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;271          break;
000028  e02e              B        |L1.136|
                  |L1.42|
;;;272        case RCC_CFGR_SWS_HSE:  /* HSE used as system clock */
;;;273          SystemCoreClock = HSE_VALUE;
00002a  481f              LDR      r0,|L1.168|
00002c  491f              LDR      r1,|L1.172|
00002e  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;274          break;
000030  e02a              B        |L1.136|
                  |L1.50|
;;;275        case RCC_CFGR_SWS_PLL:  /* PLL used as system clock */
;;;276          /* Get PLL clock source and multiplication factor ----------------------*/
;;;277          pllmull = RCC->CFGR & RCC_CFGR_PLLMUL;
000032  481c              LDR      r0,|L1.164|
000034  6840              LDR      r0,[r0,#4]
000036  210f              MOVS     r1,#0xf
000038  0489              LSLS     r1,r1,#18
00003a  4008              ANDS     r0,r0,r1
00003c  4604              MOV      r4,r0
;;;278          pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
00003e  4819              LDR      r0,|L1.164|
000040  6840              LDR      r0,[r0,#4]
000042  2103              MOVS     r1,#3
000044  03c9              LSLS     r1,r1,#15
000046  4008              ANDS     r0,r0,r1
000048  4606              MOV      r6,r0
;;;279          pllmull = ( pllmull >> 18) + 2;
00004a  0ca0              LSRS     r0,r4,#18
00004c  1c84              ADDS     r4,r0,#2
;;;280          predivfactor = (RCC->CFGR2 & RCC_CFGR2_PREDIV) + 1;
00004e  4815              LDR      r0,|L1.164|
000050  6ac0              LDR      r0,[r0,#0x2c]
000052  0700              LSLS     r0,r0,#28
000054  0f00              LSRS     r0,r0,#28
000056  1c47              ADDS     r7,r0,#1
;;;281    
;;;282          if (pllsource == RCC_CFGR_PLLSRC_HSE_PREDIV)
000058  2001              MOVS     r0,#1
00005a  0400              LSLS     r0,r0,#16
00005c  4286              CMP      r6,r0
00005e  d107              BNE      |L1.112|
;;;283          {
;;;284            /* HSE used as PLL clock source : SystemCoreClock = HSE/PREDIV * PLLMUL */
;;;285            SystemCoreClock = (HSE_VALUE/predivfactor) * pllmull;
000060  4639              MOV      r1,r7
000062  4811              LDR      r0,|L1.168|
000064  f7fffffe          BL       __aeabi_uidivmod
000068  4360              MULS     r0,r4,r0
00006a  4910              LDR      r1,|L1.172|
00006c  6008              STR      r0,[r1,#0]  ; SystemCoreClock
00006e  e006              B        |L1.126|
                  |L1.112|
;;;286          }
;;;287    #if defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F091xC) || defined(STM32F098xx)
;;;288          else if (pllsource == RCC_CFGR_PLLSRC_HSI48_PREDIV)
;;;289          {
;;;290            /* HSI48 used as PLL clock source : SystemCoreClock = HSI48/PREDIV * PLLMUL */
;;;291            SystemCoreClock = (HSI48_VALUE/predivfactor) * pllmull;
;;;292          }
;;;293    #endif /* STM32F042x6 || STM32F048xx || STM32F072xB || STM32F078xx || STM32F091xC || STM32F098xx */
;;;294          else
;;;295          {
;;;296    #if defined(STM32F042x6) || defined(STM32F048xx)  || defined(STM32F070x6) \
;;;297     || defined(STM32F078xx) || defined(STM32F071xB)  || defined(STM32F072xB) \
;;;298     || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx)  || defined(STM32F030xC)
;;;299            /* HSI used as PLL clock source : SystemCoreClock = HSI/PREDIV * PLLMUL */
;;;300            SystemCoreClock = (HSI_VALUE/predivfactor) * pllmull;
000070  4639              MOV      r1,r7
000072  480d              LDR      r0,|L1.168|
000074  f7fffffe          BL       __aeabi_uidivmod
000078  4360              MULS     r0,r4,r0
00007a  490c              LDR      r1,|L1.172|
00007c  6008              STR      r0,[r1,#0]  ; SystemCoreClock
                  |L1.126|
;;;301    #else
;;;302            /* HSI used as PLL clock source : SystemCoreClock = HSI/2 * PLLMUL */
;;;303            SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
;;;304    #endif /* STM32F042x6 || STM32F048xx || STM32F070x6 || 
;;;305              STM32F071xB || STM32F072xB || STM32F078xx || STM32F070xB ||
;;;306              STM32F091xC || STM32F098xx || STM32F030xC */
;;;307          }
;;;308          break;
00007e  e003              B        |L1.136|
                  |L1.128|
;;;309        default: /* HSI used as system clock */
;;;310          SystemCoreClock = HSI_VALUE;
000080  4809              LDR      r0,|L1.168|
000082  490a              LDR      r1,|L1.172|
000084  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;311          break;
000086  bf00              NOP      
                  |L1.136|
000088  bf00              NOP                            ;271
;;;312      }
;;;313      /* Compute HCLK clock frequency ----------------*/
;;;314      /* Get HCLK prescaler */
;;;315      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
00008a  4806              LDR      r0,|L1.164|
00008c  6840              LDR      r0,[r0,#4]
00008e  21f0              MOVS     r1,#0xf0
000090  4008              ANDS     r0,r0,r1
000092  0900              LSRS     r0,r0,#4
000094  4906              LDR      r1,|L1.176|
000096  5c0d              LDRB     r5,[r1,r0]
;;;316      /* HCLK clock frequency */
;;;317      SystemCoreClock >>= tmp;
000098  4804              LDR      r0,|L1.172|
00009a  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
00009c  40e8              LSRS     r0,r0,r5
00009e  4903              LDR      r1,|L1.172|
0000a0  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;318    }
0000a2  bdf8              POP      {r3-r7,pc}
;;;319    
                          ENDP

                  |L1.164|
                          DCD      0x40021000
                  |L1.168|
                          DCD      0x007a1200
                  |L1.172|
                          DCD      SystemCoreClock
                  |L1.176|
                          DCD      AHBPrescTable

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;162      */
;;;163    void SystemInit(void)
000000  4819              LDR      r0,|L2.104|
;;;164    {
;;;165      /* Reset the RCC clock configuration to the default reset state ------------*/
;;;166      /* Set HSION bit */
;;;167      RCC->CR |= (uint32_t)0x00000001U;
000002  6800              LDR      r0,[r0,#0]
000004  2101              MOVS     r1,#1
000006  4308              ORRS     r0,r0,r1
000008  4917              LDR      r1,|L2.104|
00000a  6008              STR      r0,[r1,#0]
;;;168    
;;;169    #if defined (STM32F051x8) || defined (STM32F058x8)
;;;170      /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE and MCOSEL[2:0] bits */
;;;171      RCC->CFGR &= (uint32_t)0xF8FFB80CU;
;;;172    #else
;;;173      /* Reset SW[1:0], HPRE[3:0], PPRE[2:0], ADCPRE, MCOSEL[2:0], MCOPRE[2:0] and PLLNODIV bits */
;;;174      RCC->CFGR &= (uint32_t)0x08FFB80CU;
00000c  4608              MOV      r0,r1
00000e  6840              LDR      r0,[r0,#4]
000010  4916              LDR      r1,|L2.108|
000012  4008              ANDS     r0,r0,r1
000014  4914              LDR      r1,|L2.104|
000016  6048              STR      r0,[r1,#4]
;;;175    #endif /* STM32F051x8 or STM32F058x8 */
;;;176      
;;;177      /* Reset HSEON, CSSON and PLLON bits */
;;;178      RCC->CR &= (uint32_t)0xFEF6FFFFU;
000018  4608              MOV      r0,r1
00001a  6800              LDR      r0,[r0,#0]
00001c  4914              LDR      r1,|L2.112|
00001e  4008              ANDS     r0,r0,r1
000020  4911              LDR      r1,|L2.104|
000022  6008              STR      r0,[r1,#0]
;;;179    
;;;180      /* Reset HSEBYP bit */
;;;181      RCC->CR &= (uint32_t)0xFFFBFFFFU;
000024  4608              MOV      r0,r1
000026  6800              LDR      r0,[r0,#0]
000028  2101              MOVS     r1,#1
00002a  0489              LSLS     r1,r1,#18
00002c  4388              BICS     r0,r0,r1
00002e  490e              LDR      r1,|L2.104|
000030  6008              STR      r0,[r1,#0]
;;;182    
;;;183      /* Reset PLLSRC, PLLXTPRE and PLLMUL[3:0] bits */
;;;184      RCC->CFGR &= (uint32_t)0xFFC0FFFFU;
000032  4608              MOV      r0,r1
000034  6840              LDR      r0,[r0,#4]
000036  213f              MOVS     r1,#0x3f
000038  0409              LSLS     r1,r1,#16
00003a  4388              BICS     r0,r0,r1
00003c  490a              LDR      r1,|L2.104|
00003e  6048              STR      r0,[r1,#4]
;;;185    
;;;186      /* Reset PREDIV[3:0] bits */
;;;187      RCC->CFGR2 &= (uint32_t)0xFFFFFFF0U;
000040  4608              MOV      r0,r1
000042  6ac0              LDR      r0,[r0,#0x2c]
000044  0900              LSRS     r0,r0,#4
000046  0100              LSLS     r0,r0,#4
000048  62c8              STR      r0,[r1,#0x2c]
;;;188    
;;;189    #if defined (STM32F072xB) || defined (STM32F078xx)
;;;190      /* Reset USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW, USBSW and ADCSW bits */
;;;191      RCC->CFGR3 &= (uint32_t)0xFFFCFE2CU;
;;;192    #elif defined (STM32F071xB)
;;;193      /* Reset USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
;;;194      RCC->CFGR3 &= (uint32_t)0xFFFFCEACU;
;;;195    #elif defined (STM32F091xC) || defined (STM32F098xx)
;;;196      /* Reset USART3SW[1:0], USART2SW[1:0], USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
;;;197      RCC->CFGR3 &= (uint32_t)0xFFF0FEACU;
;;;198    #elif defined (STM32F030x6) || defined (STM32F030x8) || defined (STM32F031x6) || defined (STM32F038xx) || defined (STM32F030xC)
;;;199      /* Reset USART1SW[1:0], I2C1SW and ADCSW bits */
;;;200      RCC->CFGR3 &= (uint32_t)0xFFFFFEECU;
00004a  4608              MOV      r0,r1
00004c  6b00              LDR      r0,[r0,#0x30]
00004e  21ff              MOVS     r1,#0xff
000050  3114              ADDS     r1,r1,#0x14
000052  4388              BICS     r0,r0,r1
000054  4904              LDR      r1,|L2.104|
000056  6308              STR      r0,[r1,#0x30]
;;;201    #elif defined (STM32F051x8) || defined (STM32F058xx)
;;;202      /* Reset USART1SW[1:0], I2C1SW, CECSW and ADCSW bits */
;;;203      RCC->CFGR3 &= (uint32_t)0xFFFFFEACU;
;;;204    #elif defined (STM32F042x6) || defined (STM32F048xx)
;;;205      /* Reset USART1SW[1:0], I2C1SW, CECSW, USBSW and ADCSW bits */
;;;206      RCC->CFGR3 &= (uint32_t)0xFFFFFE2CU;
;;;207    #elif defined (STM32F070x6) || defined (STM32F070xB)
;;;208      /* Reset USART1SW[1:0], I2C1SW, USBSW and ADCSW bits */
;;;209      RCC->CFGR3 &= (uint32_t)0xFFFFFE6CU;
;;;210      /* Set default USB clock to PLLCLK, since there is no HSI48 */
;;;211      RCC->CFGR3 |= (uint32_t)0x00000080U;  
;;;212    #else
;;;213     #warning "No target selected"
;;;214    #endif
;;;215    
;;;216      /* Reset HSI14 bit */
;;;217      RCC->CR2 &= (uint32_t)0xFFFFFFFEU;
000058  4608              MOV      r0,r1
00005a  6b40              LDR      r0,[r0,#0x34]
00005c  0840              LSRS     r0,r0,#1
00005e  0040              LSLS     r0,r0,#1
000060  6348              STR      r0,[r1,#0x34]
;;;218    
;;;219      /* Disable all interrupts */
;;;220      RCC->CIR = 0x00000000U;
000062  2000              MOVS     r0,#0
000064  6088              STR      r0,[r1,#8]
;;;221    
;;;222    }
000066  4770              BX       lr
;;;223    
                          ENDP

                  |L2.104|
                          DCD      0x40021000
                  |L2.108|
                          DCD      0x08ffb80c
                  |L2.112|
                          DCD      0xfef6ffff

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09
                  APBPrescTable
000010  00000000          DCB      0x00,0x00,0x00,0x00
000014  01020304          DCB      0x01,0x02,0x03,0x04

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x007a1200

;*** Start embedded assembler ***

#line 1 "..\\CMSIS\\Device\\ST\\STM32F0xx\\Source\\Templates\\system_stm32f0xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f0xx_c_5d646a67____REV16|
#line 388 "..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_system_stm32f0xx_c_5d646a67____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f0xx_c_5d646a67____REVSH|
#line 402
|__asm___18_system_stm32f0xx_c_5d646a67____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
