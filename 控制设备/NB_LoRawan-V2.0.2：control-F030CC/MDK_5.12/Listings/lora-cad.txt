; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\lora-cad.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\lora-cad.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS\Device\ST\STM32F0xx\Include -I..\CMSIS\Include -I..\stm32f03xx_HAL\Inc -I..\USER -I..\HAL\inc -I..\HAL\system -I..\Lib\LoRawan-node\misc -I..\Lib\LoRawan-node\crypto -I..\Lib\LoRawan-node\mac -I..\Lib\LoRawan-node\radio -I..\Lib\LoRawan-node\radio\sx1276 -I..\Lib -IE:\NBI项目\NBI_LoRa\LoRa版本备份\NB_LoRawan-V2.0.2：control-F030CC\MDK_5.12\RTE -ID:\mysaftware\keil_5.12\ARM\PACK\Keil\STM32F0xx_DFP\1.5.0\Device\Include -ID:\mysaftware\keil_5.12\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=518 -DSTM32F030xC -DUSE_HAL_DRIVER -DSTM32F030xC -DUSE_MODEM_LORA -DUSE_BAND_433 --omf_browse=.\objects\lora-cad.crf ..\USER\LoRa-cad.c]
                          THUMB

                          AREA ||i.Bublesort||, CODE, READONLY, ALIGN=1

                  Bublesort PROC
;;;159    
;;;160    uint8_t Bublesort(uint8_t a[],uint8_t n)
000000  b570              PUSH     {r4-r6,lr}
;;;161    {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;162     int i,j,k;
;;;163    	
;;;164     for(j=0;j<n-1;j++)   /* 冒泡法排序n次 */
000006  2400              MOVS     r4,#0
000008  e012              B        |L1.48|
                  |L1.10|
;;;165     {
;;;166    	for(i=0;i<n-j-1;i++)  /* 值比较大的元素沉下去，只把剩下的元素最大值再沉下去 */
00000a  2100              MOVS     r1,#0
00000c  e00b              B        |L1.38|
                  |L1.14|
;;;167    	{
;;;168    		 if(a[i]>a[i+1])  /* 最大值沉到底 */
00000e  5c50              LDRB     r0,[r2,r1]
000010  1c4e              ADDS     r6,r1,#1
000012  5d96              LDRB     r6,[r2,r6]
000014  42b0              CMP      r0,r6
000016  dd05              BLE      |L1.36|
;;;169    		 {
;;;170    				k=a[i];
000018  5c55              LDRB     r5,[r2,r1]
;;;171    				a[i]=a[i+1];
00001a  1c48              ADDS     r0,r1,#1
00001c  5c10              LDRB     r0,[r2,r0]
00001e  5450              STRB     r0,[r2,r1]
;;;172    				a[i+1]=k;
000020  1c48              ADDS     r0,r1,#1
000022  5415              STRB     r5,[r2,r0]
                  |L1.36|
000024  1c49              ADDS     r1,r1,#1              ;166
                  |L1.38|
000026  1b18              SUBS     r0,r3,r4              ;166
000028  1e40              SUBS     r0,r0,#1              ;166
00002a  4288              CMP      r0,r1                 ;166
00002c  dcef              BGT      |L1.14|
00002e  1c64              ADDS     r4,r4,#1              ;164
                  |L1.48|
000030  1e58              SUBS     r0,r3,#1              ;164
000032  42a0              CMP      r0,r4                 ;164
000034  dce9              BGT      |L1.10|
;;;173    		 }
;;;174    	}
;;;175     }
;;;176     return *a;
000036  7810              LDRB     r0,[r2,#0]
;;;177    }
000038  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.Get_max||, CODE, READONLY, ALIGN=2

                  Get_max PROC
;;;123    
;;;124    uint8_t Get_max(int8_t m,int16_t array[])
000000  b5f0              PUSH     {r4-r7,lr}
;;;125    {
000002  b087              SUB      sp,sp,#0x1c
000004  4606              MOV      r6,r0
000006  460c              MOV      r4,r1
;;;126    	uint8_t channel_scan[8] = {0};
000008  2000              MOVS     r0,#0
00000a  9005              STR      r0,[sp,#0x14]
00000c  9006              STR      r0,[sp,#0x18]
;;;127    	uint8_t channel_new[8] = {0};
00000e  9003              STR      r0,[sp,#0xc]
000010  9004              STR      r0,[sp,#0x10]
;;;128    
;;;129    	int max,min;
;;;130    	int8_t t = 0;
000012  2500              MOVS     r5,#0
;;;131    	
;;;132    	max=min=array[0];  
000014  5e20              LDRSH    r0,[r4,r0]
000016  4607              MOV      r7,r0
000018  9002              STR      r0,[sp,#8]
;;;133    	for(int8_t i=1;i<m;i++)  
00001a  2001              MOVS     r0,#1
00001c  e010              B        |L2.64|
                  |L2.30|
;;;134    	{    
;;;135    		if(max<array[i]) 
00001e  0041              LSLS     r1,r0,#1
000020  5e61              LDRSH    r1,[r4,r1]
000022  42b9              CMP      r1,r7
000024  dd02              BLE      |L2.44|
;;;136    		{
;;;137    			max=array[i];
000026  0041              LSLS     r1,r0,#1
000028  5e67              LDRSH    r7,[r4,r1]
00002a  e007              B        |L2.60|
                  |L2.44|
;;;138    		}			
;;;139    		else if(min>array[i]) 
00002c  0041              LSLS     r1,r0,#1
00002e  5e62              LDRSH    r2,[r4,r1]
000030  9902              LDR      r1,[sp,#8]
000032  428a              CMP      r2,r1
000034  da02              BGE      |L2.60|
;;;140    		{			
;;;141    			min=array[i]; 
000036  0041              LSLS     r1,r0,#1
000038  5e61              LDRSH    r1,[r4,r1]
00003a  9102              STR      r1,[sp,#8]
                  |L2.60|
00003c  1c41              ADDS     r1,r0,#1              ;133
00003e  b248              SXTB     r0,r1                 ;133
                  |L2.64|
000040  42b0              CMP      r0,r6                 ;133
000042  dbec              BLT      |L2.30|
;;;142    		}
;;;143    	}	
;;;144    	
;;;145    	for(int8_t j=0;j<m;j++)  
000044  2000              MOVS     r0,#0
000046  e00f              B        |L2.104|
                  |L2.72|
;;;146    	{	
;;;147    		if(max == array[j])
000048  0041              LSLS     r1,r0,#1
00004a  5e61              LDRSH    r1,[r4,r1]
00004c  42b9              CMP      r1,r7
00004e  d109              BNE      |L2.100|
;;;148    		{
;;;149    			channel_scan[t] = j; ///记录相同RSSI时的信道ID号数组下标
000050  aa05              ADD      r2,sp,#0x14
000052  5550              STRB     r0,[r2,r5]
;;;150    			channel_new[t]= LoRaCad.Channel_Scan[channel_scan[t]];	///保存RSSI下读取到的信道ID		
000054  a905              ADD      r1,sp,#0x14
000056  5d4a              LDRB     r2,[r1,r5]
000058  490c              LDR      r1,|L2.140|
00005a  5c89              LDRB     r1,[r1,r2]
00005c  aa03              ADD      r2,sp,#0xc
00005e  5551              STRB     r1,[r2,r5]
;;;151    			t++;
000060  1c69              ADDS     r1,r5,#1
000062  b24d              SXTB     r5,r1
                  |L2.100|
000064  1c41              ADDS     r1,r0,#1              ;145
000066  b248              SXTB     r0,r1                 ;145
                  |L2.104|
000068  42b0              CMP      r0,r6                 ;145
00006a  dbed              BLT      |L2.72|
;;;152    		}
;;;153    	}
;;;154    
;;;155    	uint8_t ID = randr( 0, t-1 ); 
00006c  1e69              SUBS     r1,r5,#1
00006e  2000              MOVS     r0,#0
000070  f7fffffe          BL       randr
000074  b2c0              UXTB     r0,r0
000076  9001              STR      r0,[sp,#4]
;;;156    	Channel = channel_new[ID]; 		
000078  a903              ADD      r1,sp,#0xc
00007a  9801              LDR      r0,[sp,#4]
00007c  5c08              LDRB     r0,[r1,r0]
00007e  4904              LDR      r1,|L2.144|
000080  7008              STRB     r0,[r1,#0]
;;;157    	return Channel;
000082  4608              MOV      r0,r1
000084  7800              LDRB     r0,[r0,#0]  ; Channel
;;;158    }
000086  b007              ADD      sp,sp,#0x1c
000088  bdf0              POP      {r4-r7,pc}
;;;159    
                          ENDP

00008a  0000              DCW      0x0000
                  |L2.140|
                          DCD      LoRaCad+0x2a
                  |L2.144|
                          DCD      Channel

                          AREA ||i.LoRa_Cad_Init||, CODE, READONLY, ALIGN=2

                  LoRa_Cad_Init PROC
;;;24     
;;;25     void LoRa_Cad_Init(void)
000000  b510              PUSH     {r4,lr}
;;;26     {
;;;27     	Radio.Standby();
000002  4903              LDR      r1,|L3.16|
000004  6b08              LDR      r0,[r1,#0x30]  ; Radio
000006  4780              BLX      r0
;;;28     	Radio.StartCad( );  // Set the device into CAD mode
000008  4901              LDR      r1,|L3.16|
00000a  6b88              LDR      r0,[r1,#0x38]  ; Radio
00000c  4780              BLX      r0
;;;29     }
00000e  bd10              POP      {r4,pc}
;;;30     
                          ENDP

                  |L3.16|
                          DCD      Radio

                          AREA ||i.LoRa_Cad_Mode||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  LoRa_Cad_Mode PROC
;;;65     
;;;66     void LoRa_Cad_Mode(void)
000000  b570              PUSH     {r4-r6,lr}
;;;67     {	
;;;68     	Send_time = 0;
000002  2000              MOVS     r0,#0
000004  4947              LDR      r1,|L4.292|
000006  6008              STR      r0,[r1,#0]  ; Send_time
;;;69     					
;;;70     	Channel = Get_Flash_Datas.channels = randr( 5, 7 ); ///获取信道ID: flash读取
000008  2107              MOVS     r1,#7
00000a  2005              MOVS     r0,#5
00000c  f7fffffe          BL       randr
000010  b2c0              UXTB     r0,r0
000012  4945              LDR      r1,|L4.296|
000014  7208              STRB     r0,[r1,#8]
000016  4945              LDR      r1,|L4.300|
000018  7008              STRB     r0,[r1,#0]
;;;71     	
;;;72     	LoRaCad.Iq_Invert = true;  ///使能节点间通信
00001a  2001              MOVS     r0,#1
00001c  4944              LDR      r1,|L4.304|
00001e  70c8              STRB     r0,[r1,#3]
;;;73     	
;;;74     	/*********************************监听信道：忙则再次监听，待空时发送*******************************/
;;;75     	if(LoRaCad.Cad_Detect == true)
000020  4608              MOV      r0,r1
000022  7880              LDRB     r0,[r0,#2]  ; LoRaCad
000024  2801              CMP      r0,#1
000026  d105              BNE      |L4.52|
;;;76     	{
;;;77     		DEBUG(2,"int cad again\r\n");
000028  a042              ADR      r0,|L4.308|
00002a  f7fffffe          BL       __2printf
;;;78     		
;;;79     		LoRaCad.Cad_Detect = false;
00002e  2000              MOVS     r0,#0
000030  493f              LDR      r1,|L4.304|
000032  7088              STRB     r0,[r1,#2]
                  |L4.52|
;;;80     	}									
;;;81     	
;;;82     	DEBUG(2,"int cad MODE\r\n");
000034  a043              ADR      r0,|L4.324|
000036  f7fffffe          BL       __2printf
;;;83     	LoRaCad.Channel_Num = 0;
00003a  2000              MOVS     r0,#0
00003c  493c              LDR      r1,|L4.304|
00003e  7648              STRB     r0,[r1,#0x19]
;;;84     		
;;;85     	while(!LoRaCad.Cad_Detect&& LoRaCad.Channel_Num<3)	///
000040  e060              B        |L4.260|
                  |L4.66|
;;;86     	{		
;;;87     		LoRaCad.Cad_Done = false;
000042  2000              MOVS     r0,#0
000044  493a              LDR      r1,|L4.304|
000046  7048              STRB     r0,[r1,#1]
;;;88     
;;;89     		Radio.Standby();
000048  4942              LDR      r1,|L4.340|
00004a  6b08              LDR      r0,[r1,#0x30]  ; Radio
00004c  4780              BLX      r0
;;;90     		OnRxWindow1TimerEvent( ); ///设置接受模式为节点侦听模式
00004e  f7fffffe          BL       OnRxWindow1TimerEvent
;;;91     		
;;;92     		LoRa_Cad_Init( ); ///注意：侦听完成获取数据需要重新再初始化Rx， 否则不接收数据
000052  f7fffffe          BL       LoRa_Cad_Init
;;;93     						
;;;94     		uint32_t symbolTime = SymbolTime();	
000056  f7fffffe          BL       SymbolTime
00005a  4606              MOV      r6,r0
00005c  f7fffffe          BL       __aeabi_f2uiz
000060  4604              MOV      r4,r0
;;;95     		
;;;96     		delay_us( 240 ); 
000062  20f0              MOVS     r0,#0xf0
000064  f7fffffe          BL       delay_us
;;;97     
;;;98     		delay_us( symbolTime + 240 ); 
000068  4620              MOV      r0,r4
00006a  30f0              ADDS     r0,r0,#0xf0
00006c  f7fffffe          BL       delay_us
;;;99     						 
;;;100    		LoRaCad.Rssi[LoRaCad.Channel_Num]  = Radio.Rssi(MODEM_LORA); ///记录信号强度
000070  4838              LDR      r0,|L4.340|
000072  6bc1              LDR      r1,[r0,#0x3c]  ; Radio
000074  2001              MOVS     r0,#1
000076  4788              BLX      r1
000078  492d              LDR      r1,|L4.304|
00007a  7e49              LDRB     r1,[r1,#0x19]  ; LoRaCad
00007c  004a              LSLS     r2,r1,#1
00007e  492c              LDR      r1,|L4.304|
000080  311a              ADDS     r1,r1,#0x1a
000082  5288              STRH     r0,[r1,r2]
;;;101    		LoRaCad.Channel_Scan[LoRaCad.Channel_Num] = Channel;		///记录信道ID
000084  4829              LDR      r0,|L4.300|
000086  7801              LDRB     r1,[r0,#0]  ; Channel
000088  4829              LDR      r0,|L4.304|
00008a  7e42              LDRB     r2,[r0,#0x19]  ; LoRaCad
00008c  302a              ADDS     r0,r0,#0x2a
00008e  5481              STRB     r1,[r0,r2]
;;;102    					
;;;103    		LoRaCad.Rssi[LoRaCad.Channel_Num] = ~(LoRaCad.Rssi[LoRaCad.Channel_Num] - 1); ///负数转正数
000090  382a              SUBS     r0,r0,#0x2a
000092  7e40              LDRB     r0,[r0,#0x19]  ; LoRaCad
000094  0041              LSLS     r1,r0,#1
000096  4826              LDR      r0,|L4.304|
000098  301a              ADDS     r0,r0,#0x1a
00009a  5a40              LDRH     r0,[r0,r1]
00009c  1e40              SUBS     r0,r0,#1
00009e  43c0              MVNS     r0,r0
0000a0  b201              SXTH     r1,r0
0000a2  4823              LDR      r0,|L4.304|
0000a4  7e40              LDRB     r0,[r0,#0x19]  ; LoRaCad
0000a6  0042              LSLS     r2,r0,#1
0000a8  4821              LDR      r0,|L4.304|
0000aa  301a              ADDS     r0,r0,#0x1a
0000ac  5281              STRH     r1,[r0,r2]
;;;104    	
;;;105    		DEBUG(2,"symbolTime = %d,rssi[0] = %d Channel = %d\r\n", symbolTime,LoRaCad.Rssi[LoRaCad.Channel_Num],LoRaCad.Channel_Scan[LoRaCad.Channel_Num]);
0000ae  381a              SUBS     r0,r0,#0x1a
0000b0  7e41              LDRB     r1,[r0,#0x19]  ; LoRaCad
0000b2  302a              ADDS     r0,r0,#0x2a
0000b4  5c43              LDRB     r3,[r0,r1]
0000b6  382a              SUBS     r0,r0,#0x2a
0000b8  7e40              LDRB     r0,[r0,#0x19]  ; LoRaCad
0000ba  0041              LSLS     r1,r0,#1
0000bc  481c              LDR      r0,|L4.304|
0000be  301a              ADDS     r0,r0,#0x1a
0000c0  5e42              LDRSH    r2,[r0,r1]
0000c2  4621              MOV      r1,r4
0000c4  a024              ADR      r0,|L4.344|
0000c6  f7fffffe          BL       __2printf
;;;106    		
;;;107    		LoRaCad.Channel_Num++;
0000ca  4819              LDR      r0,|L4.304|
0000cc  7e40              LDRB     r0,[r0,#0x19]  ; LoRaCad
0000ce  1c40              ADDS     r0,r0,#1
0000d0  4917              LDR      r1,|L4.304|
0000d2  7648              STRB     r0,[r1,#0x19]
;;;108    		Channel++;
0000d4  4815              LDR      r0,|L4.300|
0000d6  7800              LDRB     r0,[r0,#0]  ; Channel
0000d8  1c40              ADDS     r0,r0,#1
0000da  4914              LDR      r1,|L4.300|
0000dc  7008              STRB     r0,[r1,#0]
;;;109    		
;;;110    		if(Channel==8)
0000de  4608              MOV      r0,r1
0000e0  7800              LDRB     r0,[r0,#0]  ; Channel
0000e2  2808              CMP      r0,#8
0000e4  d101              BNE      |L4.234|
;;;111    			Channel = 5;
0000e6  2005              MOVS     r0,#5
0000e8  7008              STRB     r0,[r1,#0]
                  |L4.234|
;;;112    		
;;;113    		uint32_t t = Send_time;
0000ea  480e              LDR      r0,|L4.292|
0000ec  6805              LDR      r5,[r0,#0]  ; Send_time
;;;114    
;;;115    		while(LoRaCad.Cad_Done != true && (Send_time - t < 50));	///50ms  
0000ee  bf00              NOP      
                  |L4.240|
0000f0  480f              LDR      r0,|L4.304|
0000f2  7840              LDRB     r0,[r0,#1]  ; LoRaCad
0000f4  2801              CMP      r0,#1
0000f6  d004              BEQ      |L4.258|
0000f8  480a              LDR      r0,|L4.292|
0000fa  6800              LDR      r0,[r0,#0]  ; Send_time
0000fc  1b40              SUBS     r0,r0,r5
0000fe  2832              CMP      r0,#0x32
000100  d3f6              BCC      |L4.240|
                  |L4.258|
;;;116    	}
000102  bf00              NOP      
                  |L4.260|
000104  480a              LDR      r0,|L4.304|
000106  7880              LDRB     r0,[r0,#2]            ;85  ; LoRaCad
000108  2800              CMP      r0,#0                 ;85
00010a  d103              BNE      |L4.276|
00010c  4808              LDR      r0,|L4.304|
00010e  7e40              LDRB     r0,[r0,#0x19]         ;85  ; LoRaCad
000110  2803              CMP      r0,#3                 ;85
000112  db96              BLT      |L4.66|
                  |L4.276|
;;;117    			
;;;118    	/********************RTC时间取整运算：低功耗唤醒当前不支持MS级，防止时间出现偏移***********************/
;;;119    	LoRaCad.Iq_Invert = false;
000114  2000              MOVS     r0,#0
000116  4906              LDR      r1,|L4.304|
000118  70c8              STRB     r0,[r1,#3]
;;;120    	LoRaCad.Cad_Mode = false;
00011a  7008              STRB     r0,[r1,#0]
;;;121    	Radio.Sleep();
00011c  490d              LDR      r1,|L4.340|
00011e  6ac8              LDR      r0,[r1,#0x2c]  ; Radio
000120  4780              BLX      r0
;;;122    }
000122  bd70              POP      {r4-r6,pc}
;;;123    
                          ENDP

                  |L4.292|
                          DCD      Send_time
                  |L4.296|
                          DCD      Get_Flash_Datas
                  |L4.300|
                          DCD      Channel
                  |L4.304|
                          DCD      LoRaCad
                  |L4.308|
000134  696e7420          DCB      "int cad again\r\n",0
000138  63616420
00013c  61676169
000140  6e0d0a00
                  |L4.324|
000144  696e7420          DCB      "int cad MODE\r\n",0
000148  63616420
00014c  4d4f4445
000150  0d0a00  
000153  00                DCB      0
                  |L4.340|
                          DCD      Radio
                  |L4.344|
000158  73796d62          DCB      "symbolTime = %d,rssi[0] = %d Channel = %d\r\n",0
00015c  6f6c5469
000160  6d65203d
000164  2025642c
000168  72737369
00016c  5b305d20
000170  3d202564
000174  20436861
000178  6e6e656c
00017c  203d2025
000180  640d0a00

                          AREA ||i.SymbolTime||, CODE, READONLY, ALIGN=2

                  SymbolTime PROC
;;;30     
;;;31     float SymbolTime(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;32     {
000002  b087              SUB      sp,sp,#0x1c
;;;33     	LoRaCad.symbolTime = 0;
000004  2000              MOVS     r0,#0
000006  4924              LDR      r1,|L5.152|
000008  6048              STR      r0,[r1,#4]  ; LoRaCad
;;;34     	uint8_t LORA_SPREADING_FACTOR = 0;
00000a  9006              STR      r0,[sp,#0x18]
;;;35     	switch(RF_Send_Data.default_datarate)
00000c  4823              LDR      r0,|L5.156|
00000e  7c80              LDRB     r0,[r0,#0x12]  ; RF_Send_Data
000010  0003              MOVS     r3,r0
000012  f7fffffe          BL       __ARM_common_switch8
000016  0604              DCB      0x06,0x04
000018  070a0d10          DCB      0x07,0x0a,0x0d,0x10
00001c  1316              DCB      0x13,0x16
;;;36     	{
;;;37     		case 0:  //12 -- 51
;;;38     		LORA_SPREADING_FACTOR = 12;
00001e  200c              MOVS     r0,#0xc
000020  9006              STR      r0,[sp,#0x18]
;;;39     		break;
000022  e00f              B        |L5.68|
;;;40     		case 1:  //11 -- 51
;;;41     		LORA_SPREADING_FACTOR = 11;
000024  200b              MOVS     r0,#0xb
000026  9006              STR      r0,[sp,#0x18]
;;;42     		break;
000028  e00c              B        |L5.68|
;;;43     		case 2:  //10 -- 51
;;;44     		LORA_SPREADING_FACTOR = 10;
00002a  200a              MOVS     r0,#0xa
00002c  9006              STR      r0,[sp,#0x18]
;;;45     		break;
00002e  e009              B        |L5.68|
;;;46     		case 3:  //9 --- 115
;;;47     		LORA_SPREADING_FACTOR = 9;
000030  2009              MOVS     r0,#9
000032  9006              STR      r0,[sp,#0x18]
;;;48     		break;
000034  e006              B        |L5.68|
;;;49     		case 4:  //8 --- 222
;;;50     		LORA_SPREADING_FACTOR = 8;
000036  2008              MOVS     r0,#8
000038  9006              STR      r0,[sp,#0x18]
;;;51     		break;
00003a  e003              B        |L5.68|
;;;52     		case 5:  //7 --- 222
;;;53     		LORA_SPREADING_FACTOR = 7;
00003c  2007              MOVS     r0,#7
00003e  9006              STR      r0,[sp,#0x18]
;;;54     		break;
000040  e000              B        |L5.68|
;;;55     		default: break;
000042  bf00              NOP      
                  |L5.68|
000044  bf00              NOP                            ;39
;;;56     	}
;;;57     	 LoRaCad.symbolTime = (( pow( (float)2, (float)LORA_SPREADING_FACTOR ) ) + 32 ) / 125000;  // SF7 and BW = 125 KHz
000046  9806              LDR      r0,[sp,#0x18]
000048  f7fffffe          BL       __aeabi_ui2f
00004c  9001              STR      r0,[sp,#4]
00004e  f7fffffe          BL       __aeabi_f2d
000052  4604              MOV      r4,r0
000054  4622              MOV      r2,r4
000056  460b              MOV      r3,r1
000058  2000              MOVS     r0,#0
00005a  2101              MOVS     r1,#1
00005c  0789              LSLS     r1,r1,#30
00005e  f7fffffe          BL       pow
000062  4606              MOV      r6,r0
000064  2200              MOVS     r2,#0
000066  4b0e              LDR      r3,|L5.160|
000068  f7fffffe          BL       __aeabi_dadd
00006c  2200              MOVS     r2,#0
00006e  4b0d              LDR      r3,|L5.164|
000070  9103              STR      r1,[sp,#0xc]
000072  9002              STR      r0,[sp,#8]
000074  f7fffffe          BL       __aeabi_ddiv
000078  9105              STR      r1,[sp,#0x14]
00007a  9004              STR      r0,[sp,#0x10]
00007c  f7fffffe          BL       __aeabi_d2f
000080  4905              LDR      r1,|L5.152|
000082  6048              STR      r0,[r1,#4]  ; LoRaCad
;;;58     	 LoRaCad.symbolTime = LoRaCad.symbolTime * 1000000;  // symbol Time is in us
000084  6848              LDR      r0,[r1,#4]  ; LoRaCad
000086  4908              LDR      r1,|L5.168|
000088  f7fffffe          BL       __aeabi_fmul
00008c  4902              LDR      r1,|L5.152|
00008e  6048              STR      r0,[r1,#4]  ; LoRaCad
;;;59     	 DEBUG(4,"LORA_SPREADING_FACTOR = %d symbolTime = %lf\r\n",LORA_SPREADING_FACTOR,LoRaCad.symbolTime);
;;;60     	 return LoRaCad.symbolTime;
000090  4608              MOV      r0,r1
000092  6840              LDR      r0,[r0,#4]  ; LoRaCad
;;;61     }
000094  b007              ADD      sp,sp,#0x1c
000096  bdf0              POP      {r4-r7,pc}
;;;62     
                          ENDP

                  |L5.152|
                          DCD      LoRaCad
                  |L5.156|
                          DCD      RF_Send_Data
                  |L5.160|
                          DCD      0x40400000
                  |L5.164|
                          DCD      0x40fe8480
                  |L5.168|
                          DCD      0x49742400

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L37.24|
                  |L37.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L37.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L37.14|
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\USER\\LoRa-cad.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_LoRa_cad_c_256e1bf8____REV16|
#line 388 "..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_LoRa_cad_c_256e1bf8____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_LoRa_cad_c_256e1bf8____REVSH|
#line 402
|__asm___10_LoRa_cad_c_256e1bf8____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
