; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\gpio.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\gpio.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS\Device\ST\STM32F0xx\Include -I..\CMSIS\Include -I..\stm32f03xx_HAL\Inc -I..\USER -I..\HAL\inc -I..\HAL\system -I..\Lib\LoRawan-node\misc -I..\Lib\LoRawan-node\crypto -I..\Lib\LoRawan-node\mac -I..\Lib\LoRawan-node\radio -I..\Lib\LoRawan-node\radio\sx1276 -I..\Lib -IE:\NBI项目\NBI_LoRa\LoRa版本备份\NB_LoRawan-V2.0.2：control-F030CC\MDK_5.12\RTE -ID:\mysaftware\keil_5.12\ARM\PACK\Keil\STM32F0xx_DFP\1.5.0\Device\Include -ID:\mysaftware\keil_5.12\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=518 -DSTM32F030xC -DUSE_HAL_DRIVER -DSTM32F030xC -DUSE_MODEM_LORA -DUSE_BAND_433 --omf_browse=.\objects\gpio.crf ..\HAL\system\gpio.c]
                          THUMB

                          AREA ||i.GpioRead||, CODE, READONLY, ALIGN=1

                  GpioRead PROC
;;;89     
;;;90     uint32_t GpioRead( GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin )
000000  b570              PUSH     {r4-r6,lr}
;;;91     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;92     	return HAL_GPIO_ReadPin(GPIOx, GPIO_Pin);
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       HAL_GPIO_ReadPin
;;;93     }
00000e  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.GpioToggle||, CODE, READONLY, ALIGN=1

                  GpioToggle PROC
;;;84     
;;;85     void GpioToggle( GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin )
000000  b570              PUSH     {r4-r6,lr}
;;;86     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;87        HAL_GPIO_TogglePin(GPIOx,  GPIO_Pin);   
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       HAL_GPIO_TogglePin
;;;88     }
00000e  bd70              POP      {r4-r6,pc}
;;;89     
                          ENDP


                          AREA ||i.GpioWrite||, CODE, READONLY, ALIGN=1

                  GpioWrite PROC
;;;79     
;;;80     void GpioWrite( GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState )
000000  b570              PUSH     {r4-r6,lr}
;;;81     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;82         HAL_GPIO_WritePin(GPIOx, GPIO_Pin,  PinState);
000008  4632              MOV      r2,r6
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       HAL_GPIO_WritePin
;;;83     }
000012  bd70              POP      {r4-r6,pc}
;;;84     
                          ENDP


                          AREA ||i.LoRaLed_Init||, CODE, READONLY, ALIGN=2

                  LoRaLed_Init PROC
;;;35       */
;;;36     void LoRaLed_Init(void)
000000  b500              PUSH     {lr}
;;;37     {
000002  b087              SUB      sp,sp,#0x1c
;;;38         GPIO_InitTypeDef GPIO_Initure;
;;;39         __HAL_RCC_GPIOA_CLK_ENABLE();           //开启GPIOA时钟
000004  bf00              NOP      
000006  4811              LDR      r0,|L4.76|
000008  6940              LDR      r0,[r0,#0x14]
00000a  2101              MOVS     r1,#1
00000c  0449              LSLS     r1,r1,#17
00000e  4308              ORRS     r0,r0,r1
000010  490e              LDR      r1,|L4.76|
000012  6148              STR      r0,[r1,#0x14]
000014  4608              MOV      r0,r1
000016  6940              LDR      r0,[r0,#0x14]
000018  2101              MOVS     r1,#1
00001a  0449              LSLS     r1,r1,#17
00001c  4008              ANDS     r0,r0,r1
00001e  9001              STR      r0,[sp,#4]
000020  bf00              NOP      
000022  bf00              NOP      
;;;40     	
;;;41         GPIO_Initure.Pin=GPIO_PIN_15; //PB15  
000024  1088              ASRS     r0,r1,#2
000026  9002              STR      r0,[sp,#8]
;;;42         GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;//GPIO_MODE_OUTPUT_PP;  //推挽输出
000028  2001              MOVS     r0,#1
00002a  9003              STR      r0,[sp,#0xc]
;;;43         GPIO_Initure.Pull=GPIO_PULLUP;          //上拉
00002c  9004              STR      r0,[sp,#0x10]
;;;44         GPIO_Initure.Speed=GPIO_SPEED_FREQ_HIGH;     //高速
00002e  2003              MOVS     r0,#3
000030  9005              STR      r0,[sp,#0x14]
;;;45         HAL_GPIO_Init(GPIOB,&GPIO_Initure);
000032  a902              ADD      r1,sp,#8
000034  4806              LDR      r0,|L4.80|
000036  f7fffffe          BL       HAL_GPIO_Init
;;;46     	
;;;47         HAL_GPIO_WritePin(GPIOA,GPIO_PIN_15,GPIO_PIN_RESET);	//PB15置1
00003a  2200              MOVS     r2,#0
00003c  2101              MOVS     r1,#1
00003e  03c9              LSLS     r1,r1,#15
000040  2009              MOVS     r0,#9
000042  06c0              LSLS     r0,r0,#27
000044  f7fffffe          BL       HAL_GPIO_WritePin
;;;48     }
000048  b007              ADD      sp,sp,#0x1c
00004a  bd00              POP      {pc}
;;;49     
                          ENDP

                  |L4.76|
                          DCD      0x40021000
                  |L4.80|
                          DCD      0x48000400

                          AREA ||i.SX1276EXTI_Init||, CODE, READONLY, ALIGN=2

                  SX1276EXTI_Init PROC
;;;54       */
;;;55     void SX1276EXTI_Init(void)
000000  b500              PUSH     {lr}
;;;56     {
000002  b087              SUB      sp,sp,#0x1c
;;;57     	GPIO_InitTypeDef GPIO_Initure;
;;;58     	
;;;59     	__HAL_RCC_GPIOB_CLK_ENABLE();               		 //开启GPIOB时钟
000004  bf00              NOP      
000006  4819              LDR      r0,|L5.108|
000008  6940              LDR      r0,[r0,#0x14]
00000a  2101              MOVS     r1,#1
00000c  0489              LSLS     r1,r1,#18
00000e  4308              ORRS     r0,r0,r1
000010  4916              LDR      r1,|L5.108|
000012  6148              STR      r0,[r1,#0x14]
000014  4608              MOV      r0,r1
000016  6940              LDR      r0,[r0,#0x14]
000018  2101              MOVS     r1,#1
00001a  0489              LSLS     r1,r1,#18
00001c  4008              ANDS     r0,r0,r1
00001e  9001              STR      r0,[sp,#4]
000020  bf00              NOP      
000022  bf00              NOP      
;;;60     
;;;61     	GPIO_Initure.Pin=GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_10|GPIO_PIN_11;  
000024  4812              LDR      r0,|L5.112|
000026  9002              STR      r0,[sp,#8]
;;;62     	GPIO_Initure.Mode=GPIO_MODE_IT_RISING;      			//上升沿触发
000028  4812              LDR      r0,|L5.116|
00002a  9003              STR      r0,[sp,#0xc]
;;;63     	GPIO_Initure.Pull=GPIO_PULLDOWN;
00002c  2002              MOVS     r0,#2
00002e  9004              STR      r0,[sp,#0x10]
;;;64     	HAL_GPIO_Init(GPIOB,&GPIO_Initure);
000030  a902              ADD      r1,sp,#8
000032  4811              LDR      r0,|L5.120|
000034  f7fffffe          BL       HAL_GPIO_Init
;;;65     			
;;;66     	//中断线2-PC2
;;;67     	HAL_NVIC_SetPriority(EXTI0_1_IRQn,5,0);       //抢占优先级为2，子优先级为0
000038  2200              MOVS     r2,#0
00003a  2105              MOVS     r1,#5
00003c  4608              MOV      r0,r1
00003e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;68     	HAL_NVIC_EnableIRQ(EXTI0_1_IRQn);             //使能中断线2
000042  2005              MOVS     r0,#5
000044  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;69     	
;;;70     	//中断线3-PC3
;;;71     	HAL_NVIC_SetPriority(EXTI2_3_IRQn,6,0);       //抢占优先级为3，子优先级为0
000048  2200              MOVS     r2,#0
00004a  2106              MOVS     r1,#6
00004c  4608              MOV      r0,r1
00004e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;72     	HAL_NVIC_EnableIRQ(EXTI2_3_IRQn);             //使能中断线3
000052  2006              MOVS     r0,#6
000054  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;73     	
;;;74     	//中断线4-PC15
;;;75     	HAL_NVIC_SetPriority(EXTI4_15_IRQn,7,0);       //抢占优先级为0，子优先级为0
000058  2200              MOVS     r2,#0
00005a  2107              MOVS     r1,#7
00005c  4608              MOV      r0,r1
00005e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;76     	HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);             //使能中断线9
000062  2007              MOVS     r0,#7
000064  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;77     }
000068  b007              ADD      sp,sp,#0x1c
00006a  bd00              POP      {pc}
;;;78     
                          ENDP

                  |L5.108|
                          DCD      0x40021000
                  |L5.112|
                          DCD      0x00000c06
                  |L5.116|
                          DCD      0x10110000
                  |L5.120|
                          DCD      0x48000400

                          AREA ||i.SX1276GPIO_Init||, CODE, READONLY, ALIGN=2

                  SX1276GPIO_Init PROC
;;;16       */
;;;17     void SX1276GPIO_Init(void)
000000  b500              PUSH     {lr}
;;;18     {
000002  b087              SUB      sp,sp,#0x1c
;;;19         GPIO_InitTypeDef GPIO_Initure;
;;;20         __HAL_RCC_GPIOB_CLK_ENABLE();           //开启GPIOB时钟
000004  bf00              NOP      
000006  4810              LDR      r0,|L6.72|
000008  6940              LDR      r0,[r0,#0x14]
00000a  2101              MOVS     r1,#1
00000c  0489              LSLS     r1,r1,#18
00000e  4308              ORRS     r0,r0,r1
000010  490d              LDR      r1,|L6.72|
000012  6148              STR      r0,[r1,#0x14]
000014  4608              MOV      r0,r1
000016  6940              LDR      r0,[r0,#0x14]
000018  2101              MOVS     r1,#1
00001a  0489              LSLS     r1,r1,#18
00001c  4008              ANDS     r0,r0,r1
00001e  9001              STR      r0,[sp,#4]
000020  bf00              NOP      
000022  bf00              NOP      
;;;21     	
;;;22         GPIO_Initure.Pin=GPIO_PIN_13; //PB0  
000024  1148              ASRS     r0,r1,#5
000026  9002              STR      r0,[sp,#8]
;;;23         GPIO_Initure.Mode=GPIO_MODE_OUTPUT_PP;  //推挽输出
000028  2001              MOVS     r0,#1
00002a  9003              STR      r0,[sp,#0xc]
;;;24         GPIO_Initure.Pull=GPIO_PULLUP;          //上拉
00002c  9004              STR      r0,[sp,#0x10]
;;;25         GPIO_Initure.Speed=GPIO_SPEED_FREQ_HIGH;     //高速
00002e  2003              MOVS     r0,#3
000030  9005              STR      r0,[sp,#0x14]
;;;26         HAL_GPIO_Init(GPIOB,&GPIO_Initure);
000032  a902              ADD      r1,sp,#8
000034  4805              LDR      r0,|L6.76|
000036  f7fffffe          BL       HAL_GPIO_Init
;;;27     	
;;;28         HAL_GPIO_WritePin(GPIOB,GPIO_PIN_13,GPIO_PIN_SET);	//PB13置1 
00003a  2201              MOVS     r2,#1
00003c  0351              LSLS     r1,r2,#13
00003e  4803              LDR      r0,|L6.76|
000040  f7fffffe          BL       HAL_GPIO_WritePin
;;;29     }
000044  b007              ADD      sp,sp,#0x1c
000046  bd00              POP      {pc}
;;;30     
                          ENDP

                  |L6.72|
                          DCD      0x40021000
                  |L6.76|
                          DCD      0x48000400

;*** Start embedded assembler ***

#line 1 "..\\HAL\\system\\gpio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_gpio_c_272db181____REV16|
#line 388 "..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_gpio_c_272db181____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_gpio_c_272db181____REVSH|
#line 402
|__asm___6_gpio_c_272db181____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
