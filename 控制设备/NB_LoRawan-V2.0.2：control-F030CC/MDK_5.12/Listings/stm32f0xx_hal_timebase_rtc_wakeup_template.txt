; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stm32f0xx_hal_timebase_rtc_wakeup_template.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f0xx_hal_timebase_rtc_wakeup_template.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS\Device\ST\STM32F0xx\Include -I..\CMSIS\Include -I..\stm32f03xx_HAL\Inc -I..\USER -IC:\Users\NBI_Ysheng\Desktop\stm32¹¤³ÌÄ£°å\stm32f03_mode\MDK_5.12\RTE -ID:\mysaftware\keil_5.12\ARM\PACK\Keil\STM32F0xx_DFP\1.5.0\Device\Include -ID:\mysaftware\keil_5.12\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F030xC -DSTM32F030xC -DUSE_HAL_DRIVER --omf_browse=.\objects\stm32f0xx_hal_timebase_rtc_wakeup_template.crf ..\stm32f03xx_HAL\Src\stm32f0xx_hal_timebase_rtc_wakeup_template.c]
                          THUMB

                          AREA ||i.HAL_InitTick||, CODE, READONLY, ALIGN=2

                  HAL_InitTick PROC
;;;118      */
;;;119    HAL_StatusTypeDef HAL_InitTick (uint32_t TickPriority)
000000  b530              PUSH     {r4,r5,lr}
;;;120    {
000002  b091              SUB      sp,sp,#0x44
000004  4604              MOV      r4,r0
;;;121      __IO uint32_t counter = 0U;
000006  2000              MOVS     r0,#0
000008  9010              STR      r0,[sp,#0x40]
;;;122    
;;;123      RCC_OscInitTypeDef        RCC_OscInitStruct;
;;;124      RCC_PeriphCLKInitTypeDef  PeriphClkInitStruct;
;;;125    
;;;126    #ifdef RTC_CLOCK_SOURCE_LSE
;;;127      /* Configue LSE as RTC clock soucre */
;;;128      RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE;
;;;129      RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
;;;130      RCC_OscInitStruct.LSEState = RCC_LSE_ON;
;;;131      PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
;;;132    #elif defined (RTC_CLOCK_SOURCE_LSI)
;;;133      /* Configue LSI as RTC clock soucre */
;;;134      RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI;
;;;135      RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
;;;136      RCC_OscInitStruct.LSIState = RCC_LSI_ON;
;;;137      PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
;;;138    #elif defined (RTC_CLOCK_SOURCE_HSE)
;;;139      /* Configue HSE as RTC clock soucre */
;;;140      RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
00000a  2001              MOVS     r0,#1
00000c  9004              STR      r0,[sp,#0x10]
;;;141      RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
00000e  2000              MOVS     r0,#0
000010  900c              STR      r0,[sp,#0x30]
;;;142      RCC_OscInitStruct.HSEState = RCC_HSE_ON;
000012  2001              MOVS     r0,#1
000014  9005              STR      r0,[sp,#0x14]
;;;143      PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_HSE_DIV32;
000016  2003              MOVS     r0,#3
000018  0200              LSLS     r0,r0,#8
00001a  9001              STR      r0,[sp,#4]
;;;144    #else
;;;145    #error Please select the RTC Clock source
;;;146    #endif /* RTC_CLOCK_SOURCE_LSE */
;;;147    
;;;148      if(HAL_RCC_OscConfig(&RCC_OscInitStruct) == HAL_OK)
00001c  a804              ADD      r0,sp,#0x10
00001e  f7fffffe          BL       HAL_RCC_OscConfig
000022  2800              CMP      r0,#0
                  |L1.36|
000024  d17e              BNE      |L1.292|
;;;149      { 
;;;150        PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
000026  2001              MOVS     r0,#1
000028  0400              LSLS     r0,r0,#16
00002a  9000              STR      r0,[sp,#0]
;;;151        if(HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) == HAL_OK)
00002c  4668              MOV      r0,sp
00002e  f7fffffe          BL       HAL_RCCEx_PeriphCLKConfig
000032  2800              CMP      r0,#0
000034  d1f6              BNE      |L1.36|
;;;152        {
;;;153          /* Enable RTC Clock */
;;;154          __HAL_RCC_RTC_ENABLE();
000036  4850              LDR      r0,|L1.376|
000038  6a00              LDR      r0,[r0,#0x20]
00003a  2101              MOVS     r1,#1
00003c  03c9              LSLS     r1,r1,#15
00003e  4308              ORRS     r0,r0,r1
000040  494d              LDR      r1,|L1.376|
000042  6208              STR      r0,[r1,#0x20]
;;;155          /* The time base should be 1ms 
;;;156             Time base = ((RTC_ASYNCH_PREDIV + 1) * (RTC_SYNCH_PREDIV + 1)) / RTC_CLOCK 
;;;157             HSE/32 as RTC clock and HSE 8MHz
;;;158               Time base = ((49 + 1) * (4 + 1)) / 250kHz
;;;159                         = 1ms
;;;160             LSE as RTC clock 
;;;161               Time base = ((31 + 1) * (0 + 1)) / 32.768Khz
;;;162                         = ~1ms
;;;163             LSI as RTC clock 
;;;164               Time base = ((39 + 1) * (0 + 1)) / 40Khz
;;;165                         = 1ms
;;;166          */
;;;167          hRTC_Handle.Instance = RTC;
000044  484d              LDR      r0,|L1.380|
000046  494e              LDR      r1,|L1.384|
000048  6008              STR      r0,[r1,#0]  ; hRTC_Handle
;;;168          hRTC_Handle.Init.HourFormat = RTC_HOURFORMAT_24;
00004a  2000              MOVS     r0,#0
00004c  6048              STR      r0,[r1,#4]  ; hRTC_Handle
;;;169          hRTC_Handle.Init.AsynchPrediv = RTC_ASYNCH_PREDIV;
00004e  2131              MOVS     r1,#0x31
000050  484b              LDR      r0,|L1.384|
000052  6081              STR      r1,[r0,#8]
;;;170          hRTC_Handle.Init.SynchPrediv = RTC_SYNCH_PREDIV;
000054  2104              MOVS     r1,#4
000056  60c1              STR      r1,[r0,#0xc]
;;;171          hRTC_Handle.Init.OutPut = RTC_OUTPUT_DISABLE;
000058  2100              MOVS     r1,#0
00005a  6101              STR      r1,[r0,#0x10]
;;;172          hRTC_Handle.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
00005c  6141              STR      r1,[r0,#0x14]
;;;173          hRTC_Handle.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
00005e  6181              STR      r1,[r0,#0x18]
;;;174          HAL_RTC_Init(&hRTC_Handle);
000060  f7fffffe          BL       HAL_RTC_Init
;;;175    
;;;176          /* Disable the write protection for RTC registers */
;;;177          __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
000064  bf00              NOP      
000066  20ca              MOVS     r0,#0xca
000068  4945              LDR      r1,|L1.384|
00006a  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
00006c  6248              STR      r0,[r1,#0x24]
00006e  2053              MOVS     r0,#0x53
000070  4943              LDR      r1,|L1.384|
000072  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
000074  6248              STR      r0,[r1,#0x24]
000076  bf00              NOP      
;;;178    
;;;179          /* Disable the Wake-up Timer */
;;;180          __HAL_RTC_WAKEUPTIMER_DISABLE(&hRTC_Handle);
000078  4841              LDR      r0,|L1.384|
00007a  6800              LDR      r0,[r0,#0]  ; hRTC_Handle
00007c  6880              LDR      r0,[r0,#8]
00007e  2101              MOVS     r1,#1
000080  0289              LSLS     r1,r1,#10
000082  4388              BICS     r0,r0,r1
000084  493e              LDR      r1,|L1.384|
000086  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
000088  6088              STR      r0,[r1,#8]
;;;181    
;;;182          /* In case of interrupt mode is used, the interrupt source must disabled */ 
;;;183          __HAL_RTC_WAKEUPTIMER_DISABLE_IT(&hRTC_Handle,RTC_IT_WUT);
00008a  483d              LDR      r0,|L1.384|
00008c  6800              LDR      r0,[r0,#0]  ; hRTC_Handle
00008e  6880              LDR      r0,[r0,#8]
000090  2101              MOVS     r1,#1
000092  0389              LSLS     r1,r1,#14
000094  4388              BICS     r0,r0,r1
000096  493a              LDR      r1,|L1.384|
000098  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
00009a  6088              STR      r0,[r1,#8]
;;;184    
;;;185          /* Wait till RTC WUTWF flag is set  */
;;;186          while(__HAL_RTC_WAKEUPTIMER_GET_FLAG(&hRTC_Handle, RTC_FLAG_WUTWF) == RESET)
00009c  e00c              B        |L1.184|
                  |L1.158|
;;;187          {
;;;188            if(counter++ == (SystemCoreClock /48U)) 
00009e  2130              MOVS     r1,#0x30
0000a0  4838              LDR      r0,|L1.388|
0000a2  9d10              LDR      r5,[sp,#0x40]
0000a4  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
0000a6  f7fffffe          BL       __aeabi_uidivmod
0000aa  1c69              ADDS     r1,r5,#1
0000ac  9110              STR      r1,[sp,#0x40]
0000ae  42a8              CMP      r0,r5
0000b0  d102              BNE      |L1.184|
;;;189            {
;;;190              return HAL_ERROR;
0000b2  2001              MOVS     r0,#1
                  |L1.180|
;;;191            }
;;;192          }
;;;193    
;;;194          /* Clear PWR wake up Flag */
;;;195          __HAL_PWR_CLEAR_FLAG(PWR_FLAG_WU);
;;;196    
;;;197          /* Clear RTC Wake Up timer Flag */
;;;198          __HAL_RTC_WAKEUPTIMER_CLEAR_FLAG(&hRTC_Handle, RTC_FLAG_WUTF);
;;;199    
;;;200          /* Configure the Wake-up Timer counter */
;;;201          hRTC_Handle.Instance->WUTR = 0U;
;;;202    
;;;203          /* Clear the Wake-up Timer clock source bits in CR register */
;;;204          hRTC_Handle.Instance->CR &= (uint32_t)~RTC_CR_WUCKSEL;
;;;205    
;;;206          /* Configure the clock source */
;;;207          hRTC_Handle.Instance->CR |= (uint32_t)RTC_WAKEUPCLOCK_CK_SPRE_16BITS;
;;;208    
;;;209          /* RTC WakeUpTimer Interrupt Configuration: EXTI configuration */
;;;210          __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_IT();
;;;211    
;;;212          __HAL_RTC_WAKEUPTIMER_EXTI_ENABLE_RISING_EDGE();
;;;213    
;;;214          /* Configure the Interrupt in the RTC_CR register */
;;;215          __HAL_RTC_WAKEUPTIMER_ENABLE_IT(&hRTC_Handle,RTC_IT_WUT);
;;;216    
;;;217          /* Enable the Wake-up Timer */
;;;218          __HAL_RTC_WAKEUPTIMER_ENABLE(&hRTC_Handle);
;;;219    
;;;220          /* Enable the write protection for RTC registers */
;;;221          __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
;;;222    
;;;223          HAL_NVIC_SetPriority(RTC_IRQn, TickPriority, 0U);
;;;224          HAL_NVIC_EnableIRQ(RTC_IRQn); 
;;;225          return HAL_OK;
;;;226        }
;;;227      }
;;;228      return HAL_ERROR;
;;;229    }
0000b4  b011              ADD      sp,sp,#0x44
0000b6  bd30              POP      {r4,r5,pc}
                  |L1.184|
0000b8  4831              LDR      r0,|L1.384|
0000ba  6800              LDR      r0,[r0,#0]            ;186  ; hRTC_Handle
0000bc  68c0              LDR      r0,[r0,#0xc]          ;186
0000be  2104              MOVS     r1,#4                 ;186
0000c0  4008              ANDS     r0,r0,r1              ;186
0000c2  0880              LSRS     r0,r0,#2              ;186
0000c4  2800              CMP      r0,#0                 ;186
0000c6  d0ea              BEQ      |L1.158|
0000c8  482f              LDR      r0,|L1.392|
0000ca  6800              LDR      r0,[r0,#0]            ;195
0000cc  4308              ORRS     r0,r0,r1              ;195
0000ce  492e              LDR      r1,|L1.392|
0000d0  6008              STR      r0,[r1,#0]            ;195
0000d2  482b              LDR      r0,|L1.384|
0000d4  6800              LDR      r0,[r0,#0]            ;198  ; hRTC_Handle
0000d6  68c0              LDR      r0,[r0,#0xc]          ;198
0000d8  2180              MOVS     r1,#0x80              ;198
0000da  4008              ANDS     r0,r0,r1              ;198
0000dc  492b              LDR      r1,|L1.396|
0000de  4308              ORRS     r0,r0,r1              ;198
0000e0  4927              LDR      r1,|L1.384|
0000e2  6809              LDR      r1,[r1,#0]            ;198  ; hRTC_Handle
0000e4  60c8              STR      r0,[r1,#0xc]          ;198
0000e6  2000              MOVS     r0,#0                 ;201
0000e8  4925              LDR      r1,|L1.384|
0000ea  6809              LDR      r1,[r1,#0]            ;201  ; hRTC_Handle
0000ec  6148              STR      r0,[r1,#0x14]         ;201
0000ee  4824              LDR      r0,|L1.384|
0000f0  6800              LDR      r0,[r0,#0]            ;204  ; hRTC_Handle
0000f2  6880              LDR      r0,[r0,#8]            ;204
0000f4  08c0              LSRS     r0,r0,#3              ;204
0000f6  00c0              LSLS     r0,r0,#3              ;204
0000f8  4921              LDR      r1,|L1.384|
0000fa  6809              LDR      r1,[r1,#0]            ;204  ; hRTC_Handle
0000fc  6088              STR      r0,[r1,#8]            ;204
0000fe  4820              LDR      r0,|L1.384|
000100  6800              LDR      r0,[r0,#0]            ;207  ; hRTC_Handle
000102  6880              LDR      r0,[r0,#8]            ;207
000104  2104              MOVS     r1,#4                 ;207
000106  4308              ORRS     r0,r0,r1              ;207
000108  491d              LDR      r1,|L1.384|
00010a  6809              LDR      r1,[r1,#0]            ;207  ; hRTC_Handle
00010c  6088              STR      r0,[r1,#8]            ;207
00010e  4820              LDR      r0,|L1.400|
000110  6800              LDR      r0,[r0,#0]            ;210
000112  2101              MOVS     r1,#1                 ;210
000114  0509              LSLS     r1,r1,#20             ;210
000116  4308              ORRS     r0,r0,r1              ;210
000118  491d              LDR      r1,|L1.400|
00011a  6008              STR      r0,[r1,#0]            ;210
00011c  4608              MOV      r0,r1                 ;212
00011e  6880              LDR      r0,[r0,#8]            ;212
000120  2101              MOVS     r1,#1                 ;212
000122  e000              B        |L1.294|
                  |L1.292|
000124  e025              B        |L1.370|
                  |L1.294|
000126  0509              LSLS     r1,r1,#20             ;212
000128  4308              ORRS     r0,r0,r1              ;212
00012a  4919              LDR      r1,|L1.400|
00012c  6088              STR      r0,[r1,#8]            ;212
00012e  4814              LDR      r0,|L1.384|
000130  6800              LDR      r0,[r0,#0]            ;215  ; hRTC_Handle
000132  6880              LDR      r0,[r0,#8]            ;215
000134  2101              MOVS     r1,#1                 ;215
000136  0389              LSLS     r1,r1,#14             ;215
000138  4308              ORRS     r0,r0,r1              ;215
00013a  4911              LDR      r1,|L1.384|
00013c  6809              LDR      r1,[r1,#0]            ;215  ; hRTC_Handle
00013e  6088              STR      r0,[r1,#8]            ;215
000140  480f              LDR      r0,|L1.384|
000142  6800              LDR      r0,[r0,#0]            ;218  ; hRTC_Handle
000144  6880              LDR      r0,[r0,#8]            ;218
000146  2101              MOVS     r1,#1                 ;218
000148  0289              LSLS     r1,r1,#10             ;218
00014a  4308              ORRS     r0,r0,r1              ;218
00014c  490c              LDR      r1,|L1.384|
00014e  6809              LDR      r1,[r1,#0]            ;218  ; hRTC_Handle
000150  6088              STR      r0,[r1,#8]            ;218
000152  bf00              NOP                            ;221
000154  20ff              MOVS     r0,#0xff              ;221
000156  490a              LDR      r1,|L1.384|
000158  6809              LDR      r1,[r1,#0]            ;221  ; hRTC_Handle
00015a  6248              STR      r0,[r1,#0x24]         ;221
00015c  bf00              NOP                            ;221
00015e  2200              MOVS     r2,#0                 ;223
000160  4621              MOV      r1,r4                 ;223
000162  2002              MOVS     r0,#2                 ;223
000164  f7fffffe          BL       HAL_NVIC_SetPriority
000168  2002              MOVS     r0,#2                 ;224
00016a  f7fffffe          BL       HAL_NVIC_EnableIRQ
00016e  2000              MOVS     r0,#0                 ;225
000170  e7a0              B        |L1.180|
                  |L1.370|
000172  2001              MOVS     r0,#1                 ;228
000174  e79e              B        |L1.180|
;;;230    
                          ENDP

000176  0000              DCW      0x0000
                  |L1.376|
                          DCD      0x40021000
                  |L1.380|
                          DCD      0x40002800
                  |L1.384|
                          DCD      hRTC_Handle
                  |L1.388|
                          DCD      SystemCoreClock
                  |L1.392|
                          DCD      0x40007000
                  |L1.396|
                          DCD      0xfffffb7f
                  |L1.400|
                          DCD      0x40010400

                          AREA ||i.HAL_RTCEx_WakeUpTimerEventCallback||, CODE, READONLY, ALIGN=1

                  HAL_RTCEx_WakeUpTimerEventCallback PROC
;;;270      */
;;;271    void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
000000  b510              PUSH     {r4,lr}
;;;272    {
000002  4604              MOV      r4,r0
;;;273      HAL_IncTick();
000004  f7fffffe          BL       HAL_IncTick
;;;274    }
000008  bd10              POP      {r4,pc}
;;;275    
                          ENDP


                          AREA ||i.HAL_ResumeTick||, CODE, READONLY, ALIGN=2

                  HAL_ResumeTick PROC
;;;252      */
;;;253    void HAL_ResumeTick(void)
000000  bf00              NOP      
;;;254    {
;;;255      /* Disable the write protection for RTC registers */
;;;256      __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
000002  20ca              MOVS     r0,#0xca
000004  490b              LDR      r1,|L3.52|
000006  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
000008  6248              STR      r0,[r1,#0x24]
00000a  2053              MOVS     r0,#0x53
00000c  4909              LDR      r1,|L3.52|
00000e  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
000010  6248              STR      r0,[r1,#0x24]
000012  bf00              NOP      
;;;257      /* Enable  WAKE UP TIMER  interrupt */
;;;258      __HAL_RTC_WAKEUPTIMER_ENABLE_IT(&hRTC_Handle, RTC_IT_WUT);
000014  4807              LDR      r0,|L3.52|
000016  6800              LDR      r0,[r0,#0]  ; hRTC_Handle
000018  6880              LDR      r0,[r0,#8]
00001a  2101              MOVS     r1,#1
00001c  0389              LSLS     r1,r1,#14
00001e  4308              ORRS     r0,r0,r1
000020  4904              LDR      r1,|L3.52|
000022  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
000024  6088              STR      r0,[r1,#8]
;;;259      /* Enable the write protection for RTC registers */
;;;260      __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
000026  bf00              NOP      
000028  20ff              MOVS     r0,#0xff
00002a  4902              LDR      r1,|L3.52|
00002c  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
00002e  6248              STR      r0,[r1,#0x24]
000030  bf00              NOP      
;;;261    }
000032  4770              BX       lr
;;;262    
                          ENDP

                  |L3.52|
                          DCD      hRTC_Handle

                          AREA ||i.HAL_SuspendTick||, CODE, READONLY, ALIGN=2

                  HAL_SuspendTick PROC
;;;236      */
;;;237    void HAL_SuspendTick(void)
000000  bf00              NOP      
;;;238    {
;;;239      /* Disable the write protection for RTC registers */
;;;240      __HAL_RTC_WRITEPROTECTION_DISABLE(&hRTC_Handle);
000002  20ca              MOVS     r0,#0xca
000004  490b              LDR      r1,|L4.52|
000006  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
000008  6248              STR      r0,[r1,#0x24]
00000a  2053              MOVS     r0,#0x53
00000c  4909              LDR      r1,|L4.52|
00000e  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
000010  6248              STR      r0,[r1,#0x24]
000012  bf00              NOP      
;;;241      /* Disable WAKE UP TIMER Interrupt */
;;;242      __HAL_RTC_WAKEUPTIMER_DISABLE_IT(&hRTC_Handle, RTC_IT_WUT);
000014  4807              LDR      r0,|L4.52|
000016  6800              LDR      r0,[r0,#0]  ; hRTC_Handle
000018  6880              LDR      r0,[r0,#8]
00001a  2101              MOVS     r1,#1
00001c  0389              LSLS     r1,r1,#14
00001e  4388              BICS     r0,r0,r1
000020  4904              LDR      r1,|L4.52|
000022  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
000024  6088              STR      r0,[r1,#8]
;;;243      /* Enable the write protection for RTC registers */
;;;244      __HAL_RTC_WRITEPROTECTION_ENABLE(&hRTC_Handle);
000026  bf00              NOP      
000028  20ff              MOVS     r0,#0xff
00002a  4902              LDR      r1,|L4.52|
00002c  6809              LDR      r1,[r1,#0]  ; hRTC_Handle
00002e  6248              STR      r0,[r1,#0x24]
000030  bf00              NOP      
;;;245    }
000032  4770              BX       lr
;;;246    
                          ENDP

                  |L4.52|
                          DCD      hRTC_Handle

                          AREA ||i.RTC_IRQHandler||, CODE, READONLY, ALIGN=2

                  RTC_IRQHandler PROC
;;;280      */
;;;281    void RTC_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;282    {
;;;283      HAL_RTCEx_WakeUpTimerIRQHandler(&hRTC_Handle);
000002  4802              LDR      r0,|L5.12|
000004  f7fffffe          BL       HAL_RTCEx_WakeUpTimerIRQHandler
;;;284    }
000008  bd10              POP      {r4,pc}
;;;285    
                          ENDP

00000a  0000              DCW      0x0000
                  |L5.12|
                          DCD      hRTC_Handle

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  hRTC_Handle
                          %        32

;*** Start embedded assembler ***

#line 1 "..\\stm32f03xx_HAL\\Src\\stm32f0xx_hal_timebase_rtc_wakeup_template.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___44_stm32f0xx_hal_timebase_rtc_wakeup_template_c_2a3ab6ca____REV16|
#line 388 "..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___44_stm32f0xx_hal_timebase_rtc_wakeup_template_c_2a3ab6ca____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___44_stm32f0xx_hal_timebase_rtc_wakeup_template_c_2a3ab6ca____REVSH|
#line 402
|__asm___44_stm32f0xx_hal_timebase_rtc_wakeup_template_c_2a3ab6ca____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
