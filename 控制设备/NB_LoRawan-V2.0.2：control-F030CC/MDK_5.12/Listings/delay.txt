; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\delay.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\delay.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS\Device\ST\STM32F0xx\Include -I..\CMSIS\Include -I..\stm32f03xx_HAL\Inc -I..\USER -I..\HAL\inc -I..\HAL\system -I..\Lib\LoRawan-node\misc -I..\Lib\LoRawan-node\crypto -I..\Lib\LoRawan-node\mac -I..\Lib\LoRawan-node\radio -I..\Lib\LoRawan-node\radio\sx1276 -I..\Lib -IE:\NBI项目\NBI_LoRa\LoRa版本备份\NB_LoRawan-V2.0.2：control-F030CC\MDK_5.12\RTE -ID:\mysaftware\keil_5.12\ARM\PACK\Keil\STM32F0xx_DFP\1.5.0\Device\Include -ID:\mysaftware\keil_5.12\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=518 -DSTM32F030xC -DUSE_HAL_DRIVER -DSTM32F030xC -DUSE_MODEM_LORA -DUSE_BAND_433 --omf_browse=.\objects\delay.crf ..\HAL\src\delay.c]
                          THUMB

                          AREA ||i.Delay||, CODE, READONLY, ALIGN=2

                  Delay PROC
;;;58     
;;;59     void Delay( float s )
000000  b570              PUSH     {r4-r6,lr}
;;;60     {
000002  4604              MOV      r4,r0
;;;61        delay_ms( s * 1000.0f );
000004  4905              LDR      r1,|L1.28|
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       __aeabi_fmul
00000c  4606              MOV      r6,r0
00000e  f7fffffe          BL       __aeabi_f2uiz
000012  4605              MOV      r5,r0
000014  f7fffffe          BL       delay_ms
;;;62     }
000018  bd70              POP      {r4-r6,pc}
;;;63     
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x447a0000

                          AREA ||i.DelayMs||, CODE, READONLY, ALIGN=1

                  DelayMs PROC
;;;65     
;;;66     void DelayMs( uint32_t ms )
000000  b510              PUSH     {r4,lr}
;;;67     { 
000002  4604              MOV      r4,r0
;;;68         if(TimerGetLowPowerEnable() == true)
000004  f7fffffe          BL       TimerGetLowPowerEnable
000008  2800              CMP      r0,#0
00000a  d003              BEQ      |L2.20|
;;;69         {
;;;70     				DEBUG(4, "RTCMS\r\n");
;;;71             RtcDelayMs( ms );
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       RtcDelayMs
000012  e002              B        |L2.26|
                  |L2.20|
;;;72         }else
;;;73         TimerHwDelayMs( ms );
000014  4620              MOV      r0,r4
000016  f7fffffe          BL       TimerHwDelayMs
                  |L2.26|
;;;74         
;;;75     }
00001a  bd10              POP      {r4,pc}
;;;76     
                          ENDP


                          AREA ||i.delay_init||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;20     //SYSCLK:系统时钟频率
;;;21     void delay_init(uint8_t SYSCLK)
000000  b510              PUSH     {r4,lr}
;;;22     {
000002  4604              MOV      r4,r0
;;;23     
;;;24       HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);//SysTick频率为HCLK
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       HAL_SYSTICK_CLKSourceConfig
;;;25     	fac_us=SYSCLK;						    
00000a  4801              LDR      r0,|L3.16|
00000c  6004              STR      r4,[r0,#0]  ; fac_us
;;;26     }								    
00000e  bd10              POP      {r4,pc}
;;;27     
                          ENDP

                  |L3.16|
                          DCD      fac_us

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=1

                  delay_ms PROC
;;;50     
;;;51     void delay_ms(uint32_t tick_1ms)
000000  b530              PUSH     {r4,r5,lr}
;;;52     {
000002  4604              MOV      r4,r0
;;;53     	uint32_t i;
;;;54     	for(i=0;i<tick_1ms;i++) 
000004  2500              MOVS     r5,#0
000006  e004              B        |L4.18|
                  |L4.8|
;;;55     	delay_us(1000);
000008  207d              MOVS     r0,#0x7d
00000a  00c0              LSLS     r0,r0,#3
00000c  f7fffffe          BL       delay_us
000010  1c6d              ADDS     r5,r5,#1              ;54
                  |L4.18|
000012  42a5              CMP      r5,r4                 ;54
000014  d3f8              BCC      |L4.8|
;;;56     }
000016  bd30              POP      {r4,r5,pc}
;;;57     
                          ENDP


                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;30     //注意:nus的值不要大于1000us
;;;31     void delay_us(uint32_t nus)
000000  b570              PUSH     {r4-r6,lr}
;;;32     {		
000002  4603              MOV      r3,r0
;;;33     	uint32_t ticks;
;;;34     	uint32_t told,tnow,tcnt=0;
000004  2200              MOVS     r2,#0
;;;35     	uint32_t reload=SysTick->LOAD;				//LOAD的值	    	 
000006  4e0e              LDR      r6,|L5.64|
000008  6975              LDR      r5,[r6,#0x14]
;;;36     	ticks=nus*fac_us; 						//需要的节拍数 
00000a  4e0e              LDR      r6,|L5.68|
00000c  6836              LDR      r6,[r6,#0]  ; fac_us
00000e  435e              MULS     r6,r3,r6
000010  4634              MOV      r4,r6
;;;37     	told=SysTick->VAL;        				//刚进入时的计数器值
000012  4e0b              LDR      r6,|L5.64|
000014  69b1              LDR      r1,[r6,#0x18]
;;;38     	while(1)
000016  e00f              B        |L5.56|
                  |L5.24|
;;;39     	{
;;;40     		tnow=SysTick->VAL;	
000018  4e09              LDR      r6,|L5.64|
00001a  69b0              LDR      r0,[r6,#0x18]
;;;41     		if(tnow!=told)
00001c  4288              CMP      r0,r1
00001e  d00b              BEQ      |L5.56|
;;;42     		{	    
;;;43     			if(tnow<told)tcnt+=told-tnow;	//这里注意一下SYSTICK是一个递减的计数器就可以了.
000020  4288              CMP      r0,r1
000022  d202              BCS      |L5.42|
000024  1a0e              SUBS     r6,r1,r0
000026  18b2              ADDS     r2,r6,r2
000028  e002              B        |L5.48|
                  |L5.42|
;;;44     			else tcnt+=reload-tnow+told;	    
00002a  1a2e              SUBS     r6,r5,r0
00002c  1876              ADDS     r6,r6,r1
00002e  18b2              ADDS     r2,r6,r2
                  |L5.48|
;;;45     			told=tnow;
000030  4601              MOV      r1,r0
;;;46     			if(tcnt>=ticks)break;			//时间超过/等于要延迟的时间,则退出.
000032  42a2              CMP      r2,r4
000034  d300              BCC      |L5.56|
000036  e000              B        |L5.58|
                  |L5.56|
000038  e7ee              B        |L5.24|
                  |L5.58|
00003a  bf00              NOP      
;;;47     		}  
;;;48     	};
;;;49     }
00003c  bd70              POP      {r4-r6,pc}
;;;50     
                          ENDP

00003e  0000              DCW      0x0000
                  |L5.64|
                          DCD      0xe000e000
                  |L5.68|
                          DCD      fac_us

                          AREA ||.data||, DATA, ALIGN=2

                  fac_us
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\HAL\\src\\delay.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____REV16|
#line 388 "..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___7_delay_c_f6a9c549____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____REVSH|
#line 402
|__asm___7_delay_c_f6a9c549____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
