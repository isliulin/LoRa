; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stm32f0xx_hal_timebase_tim_template.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f0xx_hal_timebase_tim_template.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS\Device\ST\STM32F0xx\Include -I..\CMSIS\Include -I..\stm32f03xx_HAL\Inc -I..\USER -IC:\Users\NBI_Ysheng\Desktop\stm32¹¤³ÌÄ£°å\stm32f03_mode\MDK_5.12\RTE -ID:\mysaftware\keil_5.12\ARM\PACK\Keil\STM32F0xx_DFP\1.5.0\Device\Include -ID:\mysaftware\keil_5.12\ARM\CMSIS\Include -D__UVISION_VERSION=518 -DSTM32F030xC -DSTM32F030xC -DUSE_HAL_DRIVER --omf_browse=.\objects\stm32f0xx_hal_timebase_tim_template.crf ..\stm32f03xx_HAL\Src\stm32f0xx_hal_timebase_tim_template.c]
                          THUMB

                          AREA ||i.HAL_InitTick||, CODE, READONLY, ALIGN=2

                  HAL_InitTick PROC
;;;69       */
;;;70     HAL_StatusTypeDef HAL_InitTick (uint32_t TickPriority)
000000  b5f0              PUSH     {r4-r7,lr}
;;;71     {
000002  b087              SUB      sp,sp,#0x1c
000004  4605              MOV      r5,r0
;;;72       RCC_ClkInitTypeDef    clkconfig;
;;;73       uint32_t              uwTimclock, uwAPB1Prescaler = 0U;
000006  2600              MOVS     r6,#0
;;;74       uint32_t              uwPrescalerValue = 0U;
000008  2700              MOVS     r7,#0
;;;75       uint32_t              pFLatency;
;;;76       
;;;77         /*Configure the TIM6 IRQ priority */
;;;78       HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
00000a  2200              MOVS     r2,#0
00000c  4629              MOV      r1,r5
00000e  2011              MOVS     r0,#0x11
000010  f7fffffe          BL       HAL_NVIC_SetPriority
;;;79       
;;;80       /* Enable the TIM6 global Interrupt */
;;;81       HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
000014  2011              MOVS     r0,#0x11
000016  f7fffffe          BL       HAL_NVIC_EnableIRQ
;;;82       
;;;83       /* Enable TIM6 clock */
;;;84       __HAL_RCC_TIM6_CLK_ENABLE();
00001a  bf00              NOP      
00001c  481a              LDR      r0,|L1.136|
00001e  69c0              LDR      r0,[r0,#0x1c]
000020  2110              MOVS     r1,#0x10
000022  4308              ORRS     r0,r0,r1
000024  4918              LDR      r1,|L1.136|
000026  61c8              STR      r0,[r1,#0x1c]
000028  4608              MOV      r0,r1
00002a  69c0              LDR      r0,[r0,#0x1c]
00002c  2110              MOVS     r1,#0x10
00002e  4008              ANDS     r0,r0,r1
000030  9001              STR      r0,[sp,#4]
000032  bf00              NOP      
000034  bf00              NOP      
;;;85       
;;;86       /* Get clock configuration */
;;;87       HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
000036  a902              ADD      r1,sp,#8
000038  a803              ADD      r0,sp,#0xc
00003a  f7fffffe          BL       HAL_RCC_GetClockConfig
;;;88       
;;;89       /* Get APB1 prescaler */
;;;90       uwAPB1Prescaler = clkconfig.APB1CLKDivider;
00003e  9e06              LDR      r6,[sp,#0x18]
;;;91       
;;;92       /* Compute TIM6 clock */
;;;93       if (uwAPB1Prescaler == RCC_HCLK_DIV1) 
000040  2e00              CMP      r6,#0
000042  d103              BNE      |L1.76|
;;;94       {
;;;95         uwTimclock = HAL_RCC_GetPCLK1Freq();
000044  f7fffffe          BL       HAL_RCC_GetPCLK1Freq
000048  4604              MOV      r4,r0
00004a  e002              B        |L1.82|
                  |L1.76|
;;;96       }
;;;97       else
;;;98       {
;;;99         uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
00004c  f7fffffe          BL       HAL_RCC_GetPCLK1Freq
000050  0044              LSLS     r4,r0,#1
                  |L1.82|
;;;100      }
;;;101      
;;;102      /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
;;;103      uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
000052  490e              LDR      r1,|L1.140|
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       __aeabi_uidivmod
00005a  1e47              SUBS     r7,r0,#1
;;;104      
;;;105      /* Initialize TIM6 */
;;;106      TimHandle.Instance = TIM6;
00005c  480c              LDR      r0,|L1.144|
00005e  490d              LDR      r1,|L1.148|
000060  6008              STR      r0,[r1,#0]  ; TimHandle
;;;107      
;;;108      /* Initialize TIMx peripheral as follow:
;;;109      + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
;;;110      + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
;;;111      + ClockDivision = 0
;;;112      + Counter direction = Up
;;;113      */
;;;114      TimHandle.Init.Period = (1000000U / 1000U) - 1U;
000062  490d              LDR      r1,|L1.152|
000064  480b              LDR      r0,|L1.148|
000066  60c1              STR      r1,[r0,#0xc]
;;;115      TimHandle.Init.Prescaler = uwPrescalerValue;
000068  6047              STR      r7,[r0,#4]  ; TimHandle
;;;116      TimHandle.Init.ClockDivision = 0U;
00006a  2100              MOVS     r1,#0
00006c  6101              STR      r1,[r0,#0x10]
;;;117      TimHandle.Init.CounterMode = TIM_COUNTERMODE_UP;
00006e  6081              STR      r1,[r0,#8]
;;;118      TimHandle.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
000070  6181              STR      r1,[r0,#0x18]
;;;119      if(HAL_TIM_Base_Init(&TimHandle) == HAL_OK)
000072  f7fffffe          BL       HAL_TIM_Base_Init
000076  2800              CMP      r0,#0
000078  d104              BNE      |L1.132|
;;;120      {
;;;121        /* Start the TIM time Base generation in interrupt mode */
;;;122        return HAL_TIM_Base_Start_IT(&TimHandle);
00007a  4806              LDR      r0,|L1.148|
00007c  f7fffffe          BL       HAL_TIM_Base_Start_IT
                  |L1.128|
;;;123      }
;;;124      
;;;125      /* Return function status */
;;;126      return HAL_ERROR;
;;;127    }
000080  b007              ADD      sp,sp,#0x1c
000082  bdf0              POP      {r4-r7,pc}
                  |L1.132|
000084  2001              MOVS     r0,#1                 ;126
000086  e7fb              B        |L1.128|
;;;128    
                          ENDP

                  |L1.136|
                          DCD      0x40021000
                  |L1.140|
                          DCD      0x000f4240
                  |L1.144|
                          DCD      0x40001000
                  |L1.148|
                          DCD      TimHandle
                  |L1.152|
                          DCD      0x000003e7

                          AREA ||i.HAL_ResumeTick||, CODE, READONLY, ALIGN=2

                  HAL_ResumeTick PROC
;;;146      */
;;;147    void HAL_ResumeTick(void)
000000  4804              LDR      r0,|L2.20|
;;;148    {
;;;149      /* Enable TIM6 Update interrupt */
;;;150      __HAL_TIM_ENABLE_IT(&TimHandle, TIM_IT_UPDATE);
000002  6800              LDR      r0,[r0,#0]  ; TimHandle
000004  68c0              LDR      r0,[r0,#0xc]
000006  2101              MOVS     r1,#1
000008  4308              ORRS     r0,r0,r1
00000a  4902              LDR      r1,|L2.20|
00000c  6809              LDR      r1,[r1,#0]  ; TimHandle
00000e  60c8              STR      r0,[r1,#0xc]
;;;151    }
000010  4770              BX       lr
;;;152    
                          ENDP

000012  0000              DCW      0x0000
                  |L2.20|
                          DCD      TimHandle

                          AREA ||i.HAL_SuspendTick||, CODE, READONLY, ALIGN=2

                  HAL_SuspendTick PROC
;;;134      */
;;;135    void HAL_SuspendTick(void)
000000  4804              LDR      r0,|L3.20|
;;;136    {
;;;137      /* Disable TIM6 update Interrupt */
;;;138      __HAL_TIM_DISABLE_IT(&TimHandle, TIM_IT_UPDATE);
000002  6800              LDR      r0,[r0,#0]  ; TimHandle
000004  68c0              LDR      r0,[r0,#0xc]
000006  0840              LSRS     r0,r0,#1
000008  0040              LSLS     r0,r0,#1
00000a  4902              LDR      r1,|L3.20|
00000c  6809              LDR      r1,[r1,#0]  ; TimHandle
00000e  60c8              STR      r0,[r1,#0xc]
;;;139    }
000010  4770              BX       lr
;;;140    
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      TimHandle

                          AREA ||i.HAL_TIM_PeriodElapsedCallback||, CODE, READONLY, ALIGN=1

                  HAL_TIM_PeriodElapsedCallback PROC
;;;160      */
;;;161    void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
000000  b510              PUSH     {r4,lr}
;;;162    {
000002  4604              MOV      r4,r0
;;;163      HAL_IncTick();
000004  f7fffffe          BL       HAL_IncTick
;;;164    }
000008  bd10              POP      {r4,pc}
;;;165    
                          ENDP


                          AREA ||i.TIM6_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM6_IRQHandler PROC
;;;170      */
;;;171    void TIM6_DAC_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;172    {
;;;173      HAL_TIM_IRQHandler(&TimHandle);
000002  4802              LDR      r0,|L5.12|
000004  f7fffffe          BL       HAL_TIM_IRQHandler
;;;174    }
000008  bd10              POP      {r4,pc}
;;;175    
                          ENDP

00000a  0000              DCW      0x0000
                  |L5.12|
                          DCD      TimHandle

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  TimHandle
                          %        64

;*** Start embedded assembler ***

#line 1 "..\\stm32f03xx_HAL\\Src\\stm32f0xx_hal_timebase_tim_template.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___37_stm32f0xx_hal_timebase_tim_template_c_2a3ab6ca____REV16|
#line 388 "..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___37_stm32f0xx_hal_timebase_tim_template_c_2a3ab6ca____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___37_stm32f0xx_hal_timebase_tim_template_c_2a3ab6ca____REVSH|
#line 402
|__asm___37_stm32f0xx_hal_timebase_tim_template_c_2a3ab6ca____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
