; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS\Device\ST\STM32F0xx\Include -I..\CMSIS\Include -I..\stm32f03xx_HAL\Inc -I..\USER -I..\HAL\inc -I..\HAL\system -I..\Lib\LoRawan-node\misc -I..\Lib\LoRawan-node\crypto -I..\Lib\LoRawan-node\mac -I..\Lib\LoRawan-node\radio -I..\Lib\LoRawan-node\radio\sx1276 -I..\Lib -IE:\NBI项目\NBI_LoRa\LoRa版本备份\NB_LoRawan-V2.0.2：control-F030CC\MDK_5.12\RTE -ID:\mysaftware\keil_5.12\ARM\PACK\Keil\STM32F0xx_DFP\1.5.0\Device\Include -ID:\mysaftware\keil_5.12\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=518 -DSTM32F030xC -DUSE_HAL_DRIVER -DSTM32F030xC -DUSE_MODEM_LORA -DUSE_BAND_433 --omf_browse=.\objects\main.crf ..\USER\main.c]
                          THUMB

                          AREA ||i.Error_Handler||, CODE, READONLY, ALIGN=2

                  Error_Handler PROC
;;;137      */
;;;138    void Error_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;139    { 
;;;140    	DEBUG(2,"error\r\n");
000002  a002              ADR      r0,|L1.12|
000004  f7fffffe          BL       __2printf
;;;141    }
000008  bd10              POP      {r4,pc}
;;;142    
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
00000c  6572726f          DCB      "error\r\n",0
000010  720d0a00

                          AREA ||i.app_mac_cb||, CODE, READONLY, ALIGN=2

                  app_mac_cb PROC
;;;34     
;;;35     void app_mac_cb (mac_evt_t evt, void *msg)
000000  b500              PUSH     {lr}
;;;36     {
;;;37         switch(evt){
000002  0003              MOVS     r3,r0
000004  f7fffffe          BL       __ARM_common_switch8
000008  07050607          DCB      0x07,0x05,0x06,0x07
00000c  08090a0b          DCB      0x08,0x09,0x0a,0x0b
000010  1000              DCB      0x10,0x00
;;;38         case MAC_STA_TXDONE:                
;;;39         case MAC_STA_RXDONE:
000012  bf00              NOP      
;;;40         case MAC_STA_RXTIMEOUT:
000014  bf00              NOP      
;;;41         case MAC_STA_ACK_RECEIVED:
000016  bf00              NOP      
;;;42         case MAC_STA_ACK_UNRECEIVED:
000018  bf00              NOP      
;;;43         case MAC_STA_CMD_JOINACCEPT:         
00001a  bf00              NOP      
;;;44         case MAC_STA_CMD_RECEIVED:
00001c  bf00              NOP      
;;;45              loramac_rx_info = msg;   ///mac层接收数据信息：rssi 端口等
00001e  4a03              LDR      r2,|L2.44|
000020  6011              STR      r1,[r2,#0]  ; loramac_rx_info
;;;46              loramac_evt = evt;
000022  4a03              LDR      r2,|L2.48|
000024  7010              STRB     r0,[r2,#0]
;;;47              
;;;48              break;
000026  bf00              NOP      
000028  bf00              NOP      
;;;49         }
;;;50     }
00002a  bd00              POP      {pc}
;;;51     
                          ENDP

                  |L2.44|
                          DCD      loramac_rx_info
                  |L2.48|
                          DCD      loramac_evt

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  main PROC
;;;85     /* variable functions ---------------------------------------------------------*/	
;;;86     int main(void)
000000  f7fffffe          BL       BoardInitMcu
;;;87     {	
;;;88        BoardInitMcu();	
;;;89        DEBUG(2,"hello world NBI LoRaWAN\r\n");
000004  a01b              ADR      r0,|L3.116|
000006  f7fffffe          BL       __2printf
;;;90     
;;;91        user_app_init(app_mac_cb);
00000a  4821              LDR      r0,|L3.144|
00000c  f7fffffe          BL       user_app_init
;;;92        
;;;93        TimerInit( &ReportTimer, OnReportTimerEvent );
000010  4920              LDR      r1,|L3.148|
000012  4821              LDR      r0,|L3.152|
000014  f7fffffe          BL       TimerInit
;;;94        ReportTimerEvent = true;
000018  2001              MOVS     r0,#1
00001a  4920              LDR      r1,|L3.156|
00001c  7008              STRB     r0,[r1,#0]
;;;95        LoRapp_SenSor_States.loramac_evt_flag = 0;
00001e  2000              MOVS     r0,#0
000020  491f              LDR      r1,|L3.160|
000022  7088              STRB     r0,[r1,#2]
;;;96     	
;;;97     	 /******************空速初始化*****************/
;;;98     	 RF_Send_Data.ADR_Datarate = RF_Send_Data.default_datarate = Get_Flash_Datas.datarate = LORAMAC_DEFAULT_DATARATE;
000024  491f              LDR      r1,|L3.164|
000026  7088              STRB     r0,[r1,#2]
000028  491f              LDR      r1,|L3.168|
00002a  7488              STRB     r0,[r1,#0x12]
00002c  7448              STRB     r0,[r1,#0x11]
;;;99     	
;;;100    	 RF_Send_Data.AT_MODULE_PORT = randr( 0, 0xDF );
00002e  21df              MOVS     r1,#0xdf
000030  f7fffffe          BL       randr
000034  491c              LDR      r1,|L3.168|
000036  7188              STRB     r0,[r1,#6]
;;;101    	 DEBUG(2, "PORT = %d\r\n",RF_Send_Data.AT_MODULE_PORT);
000038  4608              MOV      r0,r1
00003a  7981              LDRB     r1,[r0,#6]  ; RF_Send_Data
00003c  a01b              ADR      r0,|L3.172|
00003e  f7fffffe          BL       __2printf
;;;102    	
;;;103    	 LoRaMacSetDeviceClass( CLASS_C );
000042  2002              MOVS     r0,#2
000044  f7fffffe          BL       LoRaMacSetDeviceClass
;;;104    	
;;;105    	 RF_Send_Data.Estab_Communt_State = true; ///握手状态
000048  2001              MOVS     r0,#1
00004a  4917              LDR      r1,|L3.168|
00004c  7548              STRB     r0,[r1,#0x15]
;;;106    	
;;;107    	 Enable_Stm8_Power(  ); ///使能stm8_power
00004e  f7fffffe          BL       Enable_Stm8_Power
;;;108    	
;;;109       Control_Relay_Init(  ); ///stm32：3路继电器控制
000052  f7fffffe          BL       Control_Relay_Init
;;;110    	 
;;;111    	 Get_Work_ModeInit(  ); ///手/自动获取初始化
000056  f7fffffe          BL       Get_Work_ModeInit
;;;112    	
;;;113    
;;;114      while (1)
00005a  e009              B        |L3.112|
                  |L3.92|
;;;115      {	
;;;116          
;;;117    #if ( OVER_THE_AIR_ACTIVATION == 1 ) 
;;;118    		app_loramacjoinreq( );
;;;119       
;;;120    #endif        
;;;121    	 App_Estab_Communt(  );
00005c  f7fffffe          BL       App_Estab_Communt
;;;122    	 
;;;123    	 Check_Key_Mode(  ); ///检查当前处于哪种模式
000060  f7fffffe          BL       Check_Key_Mode
;;;124    		
;;;125    	 if( RF_Send_Data.Estab_Communt_State==false )
000064  4810              LDR      r0,|L3.168|
000066  7d40              LDRB     r0,[r0,#0x15]  ; RF_Send_Data
000068  2800              CMP      r0,#0
00006a  d101              BNE      |L3.112|
;;;126    	 {
;;;127    		 Receive_ConTrol_Data();	
00006c  f7fffffe          BL       Receive_ConTrol_Data
                  |L3.112|
000070  e7f4              B        |L3.92|
;;;128    	 }
;;;129         
;;;130      }
;;;131    }
;;;132    
                          ENDP

000072  0000              DCW      0x0000
                  |L3.116|
000074  68656c6c          DCB      "hello world NBI LoRaWAN\r\n",0
000078  6f20776f
00007c  726c6420
000080  4e424920
000084  4c6f5261
000088  57414e0d
00008c  0a00    
00008e  00                DCB      0
00008f  00                DCB      0
                  |L3.144|
                          DCD      app_mac_cb
                  |L3.148|
                          DCD      OnReportTimerEvent
                  |L3.152|
                          DCD      ReportTimer
                  |L3.156|
                          DCD      ReportTimerEvent
                  |L3.160|
                          DCD      LoRapp_SenSor_States
                  |L3.164|
                          DCD      Get_Flash_Datas
                  |L3.168|
                          DCD      RF_Send_Data
                  |L3.172|
0000ac  504f5254          DCB      "PORT = %d\r\n",0
0000b0  203d2025
0000b4  640d0a00

                          AREA ||.data||, DATA, ALIGN=2

                  AppEui
000000  12345678          DCB      0x12,0x34,0x56,0x78
000004  90abcdef          DCB      0x90,0xab,0xcd,0xef
                  AppKey
000008  2b7e1516          DCB      0x2b,0x7e,0x15,0x16
00000c  28aed2a6          DCB      0x28,0xae,0xd2,0xa6
000010  abf71588          DCB      0xab,0xf7,0x15,0x88
000014  09cf4f3c          DCB      0x09,0xcf,0x4f,0x3c
                  loramac_rx_info
                          DCD      0x00000000
                  loramac_evt
00001c  00                DCB      0x00
                  test_rtc_state
00001d  00                DCB      0x00
                  control_buf
00001e  0000              DCB      0x00,0x00
000020  00000000          DCB      0x00,0x00,0x00,0x00
                  check_data
                          DCD      0x00000000

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L28.24|
                  |L28.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L28.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L28.14|
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\USER\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_e7e6872a____REV16|
#line 388 "..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_main_c_e7e6872a____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_e7e6872a____REVSH|
#line 402
|__asm___6_main_c_e7e6872a____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
