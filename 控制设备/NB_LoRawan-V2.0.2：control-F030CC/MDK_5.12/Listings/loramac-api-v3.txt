; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\loramac-api-v3.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\loramac-api-v3.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS\Device\ST\STM32F0xx\Include -I..\CMSIS\Include -I..\stm32f03xx_HAL\Inc -I..\USER -I..\HAL\inc -I..\HAL\system -I..\Lib\LoRawan-node\misc -I..\Lib\LoRawan-node\crypto -I..\Lib\LoRawan-node\mac -I..\Lib\LoRawan-node\radio -I..\Lib\LoRawan-node\radio\sx1276 -I..\Lib -IE:\NBI项目\NBI_LoRa\LoRa版本备份\NB_LoRawan-V2.0.2：control-F030CC\MDK_5.12\RTE -ID:\mysaftware\keil_5.12\ARM\PACK\Keil\STM32F0xx_DFP\1.5.0\Device\Include -ID:\mysaftware\keil_5.12\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=518 -DSTM32F030xC -DUSE_HAL_DRIVER -DSTM32F030xC -DUSE_MODEM_LORA -DUSE_BAND_433 --omf_browse=.\objects\loramac-api-v3.crf ..\Lib\LoRawan-node\mac\LoRaMac-api-v3.c]
                          THUMB

                          AREA ||i.LoRaMacGetDownLinkCounter||, CODE, READONLY, ALIGN=1

                  LoRaMacGetDownLinkCounter PROC
;;;613    
;;;614    uint32_t LoRaMacGetDownLinkCounter( void )
000000  b50e              PUSH     {r1-r3,lr}
;;;615    {
;;;616        MibRequestConfirm_t mibGet;
;;;617    
;;;618        mibGet.Type = MIB_DOWNLINK_COUNTER;
000002  2015              MOVS     r0,#0x15
000004  4669              MOV      r1,sp
000006  7008              STRB     r0,[r1,#0]
;;;619    
;;;620        LoRaMacMibGetRequestConfirm( &mibGet );
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       LoRaMacMibGetRequestConfirm
;;;621    
;;;622        return mibGet.Param.DownLinkCounter;
00000e  9801              LDR      r0,[sp,#4]
;;;623    }
000010  bd0e              POP      {r1-r3,pc}
;;;624    
                          ENDP


                          AREA ||i.LoRaMacGetUpLinkCounter||, CODE, READONLY, ALIGN=1

                  LoRaMacGetUpLinkCounter PROC
;;;602    
;;;603    uint32_t LoRaMacGetUpLinkCounter( void )
000000  b50e              PUSH     {r1-r3,lr}
;;;604    {
;;;605        MibRequestConfirm_t mibGet;
;;;606    
;;;607        mibGet.Type = MIB_UPLINK_COUNTER;
000002  2014              MOVS     r0,#0x14
000004  4669              MOV      r1,sp
000006  7008              STRB     r0,[r1,#0]
;;;608    
;;;609        LoRaMacMibGetRequestConfirm( &mibGet );
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       LoRaMacMibGetRequestConfirm
;;;610    
;;;611        return mibGet.Param.UpLinkCounter;
00000e  9801              LDR      r0,[sp,#4]
;;;612    }
000010  bd0e              POP      {r1-r3,pc}
;;;613    
                          ENDP


                          AREA ||i.LoRaMacInit||, CODE, READONLY, ALIGN=2

                  LoRaMacInit PROC
;;;138    
;;;139    void LoRaMacInit( LoRaMacCallbacks_t *callbacks )
000000  b510              PUSH     {r4,lr}
;;;140    {
000002  4604              MOV      r4,r0
;;;141        LoRaMacPrimitives.MacMcpsConfirm = McpsConfirm;
000004  4809              LDR      r0,|L3.44|
000006  490a              LDR      r1,|L3.48|
000008  6008              STR      r0,[r1,#0]  ; LoRaMacPrimitives
;;;142        LoRaMacPrimitives.MacMcpsIndication = McpsIndication;
00000a  480a              LDR      r0,|L3.52|
00000c  6048              STR      r0,[r1,#4]  ; LoRaMacPrimitives
;;;143        LoRaMacPrimitives.MacMlmeConfirm = MlmeConfirm;
00000e  480a              LDR      r0,|L3.56|
000010  6088              STR      r0,[r1,#8]  ; LoRaMacPrimitives
;;;144    
;;;145        LoRaMacCallbacks.MacEvent = callbacks->MacEvent;
000012  490a              LDR      r1,|L3.60|
000014  6820              LDR      r0,[r4,#0]
000016  6008              STR      r0,[r1,#0]  ; LoRaMacCallbacks
;;;146        LoRaMacCallbacks.GetBatteryLevel = callbacks->GetBatteryLevel;
000018  6860              LDR      r0,[r4,#4]
00001a  6048              STR      r0,[r1,#4]  ; LoRaMacCallbacks
;;;147        LoRaMacCallback.GetBatteryLevel = callbacks->GetBatteryLevel;
00001c  4908              LDR      r1,|L3.64|
00001e  6860              LDR      r0,[r4,#4]
000020  6008              STR      r0,[r1,#0]  ; LoRaMacCallback
;;;148    
;;;149        LoRaMacInitialization( &LoRaMacPrimitives, &LoRaMacCallback );
000022  4803              LDR      r0,|L3.48|
000024  f7fffffe          BL       LoRaMacInitialization
;;;150    }
000028  bd10              POP      {r4,pc}
;;;151    
                          ENDP

00002a  0000              DCW      0x0000
                  |L3.44|
                          DCD      McpsConfirm
                  |L3.48|
                          DCD      LoRaMacPrimitives
                  |L3.52|
                          DCD      McpsIndication
                  |L3.56|
                          DCD      MlmeConfirm
                  |L3.60|
                          DCD      LoRaMacCallbacks
                  |L3.64|
                          DCD      LoRaMacCallback

                          AREA ||i.LoRaMacInitNwkIds||, CODE, READONLY, ALIGN=1

                  LoRaMacInitNwkIds PROC
;;;161    
;;;162    void LoRaMacInitNwkIds( uint32_t netID, uint32_t devAddr, uint8_t *nwkSKey, uint8_t *appSKey )
000000  b5fe              PUSH     {r1-r7,lr}
;;;163    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
000008  461f              MOV      r7,r3
;;;164        MibRequestConfirm_t mibSet;
;;;165    
;;;166        mibSet.Type = MIB_NET_ID;
00000a  2103              MOVS     r1,#3
00000c  4668              MOV      r0,sp
00000e  7001              STRB     r1,[r0,#0]
;;;167        mibSet.Param.NetID = netID;
000010  9401              STR      r4,[sp,#4]
;;;168    
;;;169        LoRaMacMibSetRequestConfirm( &mibSet );
000012  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;170    
;;;171        mibSet.Type = MIB_DEV_ADDR;
000016  2104              MOVS     r1,#4
000018  4668              MOV      r0,sp
00001a  7001              STRB     r1,[r0,#0]
;;;172        mibSet.Param.DevAddr = devAddr;
00001c  9501              STR      r5,[sp,#4]
;;;173    
;;;174        LoRaMacMibSetRequestConfirm( &mibSet );
00001e  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;175    
;;;176        mibSet.Type = MIB_NWK_SKEY;
000022  2105              MOVS     r1,#5
000024  4668              MOV      r0,sp
000026  7001              STRB     r1,[r0,#0]
;;;177        mibSet.Param.NwkSKey = nwkSKey;
000028  9601              STR      r6,[sp,#4]
;;;178    
;;;179        LoRaMacMibSetRequestConfirm( &mibSet );
00002a  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;180    
;;;181        mibSet.Type = MIB_APP_SKEY;
00002e  2106              MOVS     r1,#6
000030  4668              MOV      r0,sp
000032  7001              STRB     r1,[r0,#0]
;;;182        mibSet.Param.AppSKey = appSKey;
000034  9701              STR      r7,[sp,#4]
;;;183    
;;;184        LoRaMacMibSetRequestConfirm( &mibSet );
000036  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;185    
;;;186        mibSet.Type = MIB_NETWORK_JOINED;
00003a  2101              MOVS     r1,#1
00003c  4668              MOV      r0,sp
00003e  7001              STRB     r1,[r0,#0]
;;;187        mibSet.Param.IsNetworkJoined = true;
000040  7101              STRB     r1,[r0,#4]
;;;188    
;;;189        LoRaMacMibSetRequestConfirm( &mibSet );
000042  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;190    }
000046  bdfe              POP      {r1-r7,pc}
;;;191    
                          ENDP


                          AREA ||i.LoRaMacJoinReq||, CODE, READONLY, ALIGN=1

                  LoRaMacJoinReq PROC
;;;201    
;;;202    uint8_t LoRaMacJoinReq( uint8_t *devEui, uint8_t *appEui, uint8_t *appKey )
000000  b5f0              PUSH     {r4-r7,lr}
;;;203    {
000002  b085              SUB      sp,sp,#0x14
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;204        MlmeReq_t mlmeRequest;
;;;205        uint8_t status;
;;;206    
;;;207        mlmeRequest.Type = MLME_JOIN;
00000a  2000              MOVS     r0,#0
00000c  4669              MOV      r1,sp
00000e  7008              STRB     r0,[r1,#0]
;;;208        mlmeRequest.Req.Join.AppEui = appEui;
000010  9602              STR      r6,[sp,#8]
;;;209        mlmeRequest.Req.Join.AppKey = appKey;
000012  9703              STR      r7,[sp,#0xc]
;;;210        mlmeRequest.Req.Join.DevEui = devEui;
000014  9501              STR      r5,[sp,#4]
;;;211    
;;;212        switch( LoRaMacMlmeRequest( &mlmeRequest ) )
000016  4668              MOV      r0,sp
000018  f7fffffe          BL       LoRaMacMlmeRequest
00001c  0003              MOVS     r3,r0
00001e  f7fffffe          BL       __ARM_common_switch8
000022  0b07              DCB      0x0b,0x07
000024  09101414          DCB      0x09,0x10,0x14,0x14
000028  14140b0d          DCB      0x14,0x14,0x0b,0x0d
00002c  0e121400          DCB      0x0e,0x12,0x14,0x00
;;;213        {
;;;214            case LORAMAC_STATUS_OK:
;;;215            {
;;;216                status = 0;
000030  2400              MOVS     r4,#0
;;;217                break;
000032  e00c              B        |L5.78|
;;;218            }
;;;219            case LORAMAC_STATUS_BUSY:
;;;220            {
;;;221                status = 1;
000034  2401              MOVS     r4,#1
;;;222                break;
000036  e00a              B        |L5.78|
;;;223            }
;;;224            case LORAMAC_STATUS_NO_NETWORK_JOINED:
;;;225            {
;;;226                status = 2;
000038  2402              MOVS     r4,#2
;;;227                break;
00003a  e008              B        |L5.78|
;;;228            }
;;;229            case LORAMAC_STATUS_LENGTH_ERROR:
;;;230            case LORAMAC_STATUS_MAC_CMD_LENGTH_ERROR:
00003c  bf00              NOP      
;;;231            {
;;;232                status = 3;
00003e  2403              MOVS     r4,#3
;;;233                break;
000040  e005              B        |L5.78|
;;;234            }
;;;235            case LORAMAC_STATUS_SERVICE_UNKNOWN:
;;;236            {
;;;237                status = 4;
000042  2404              MOVS     r4,#4
;;;238                break;
000044  e003              B        |L5.78|
;;;239            }
;;;240            case LORAMAC_STATUS_DEVICE_OFF:
;;;241            {
;;;242                status = 6;
000046  2406              MOVS     r4,#6
;;;243                break;
000048  e001              B        |L5.78|
;;;244            }
;;;245            default:
;;;246            {
;;;247                status = 1;
00004a  2401              MOVS     r4,#1
;;;248                break;
00004c  bf00              NOP      
                  |L5.78|
00004e  bf00              NOP                            ;217
;;;249            }
;;;250        }
;;;251    
;;;252        return status;
000050  4620              MOV      r0,r4
;;;253    }
000052  b005              ADD      sp,sp,#0x14
000054  bdf0              POP      {r4-r7,pc}
;;;254    
                          ENDP


                          AREA ||i.LoRaMacLinkCheckReq||, CODE, READONLY, ALIGN=1

                  LoRaMacLinkCheckReq PROC
;;;254    
;;;255    uint8_t LoRaMacLinkCheckReq( void )
000000  b51f              PUSH     {r0-r4,lr}
;;;256    {
;;;257        MlmeReq_t mlmeRequest;
;;;258        uint8_t status;
;;;259    
;;;260        mlmeRequest.Type = MLME_LINK_CHECK;
000002  2001              MOVS     r0,#1
000004  4669              MOV      r1,sp
000006  7008              STRB     r0,[r1,#0]
;;;261    
;;;262        switch( LoRaMacMlmeRequest( &mlmeRequest ) )
000008  4668              MOV      r0,sp
00000a  f7fffffe          BL       LoRaMacMlmeRequest
00000e  2800              CMP      r0,#0
000010  d002              BEQ      |L6.24|
000012  2802              CMP      r0,#2
000014  d104              BNE      |L6.32|
000016  e001              B        |L6.28|
                  |L6.24|
;;;263        {
;;;264            case LORAMAC_STATUS_OK:
;;;265            {
;;;266                status = 0;
000018  2400              MOVS     r4,#0
;;;267                break;
00001a  e003              B        |L6.36|
                  |L6.28|
;;;268            }
;;;269            case LORAMAC_STATUS_SERVICE_UNKNOWN:
;;;270            {
;;;271                status = 1;
00001c  2401              MOVS     r4,#1
;;;272                break;
00001e  e001              B        |L6.36|
                  |L6.32|
;;;273            }
;;;274            default:
;;;275            {
;;;276                status = 1;
000020  2401              MOVS     r4,#1
;;;277                break;
000022  bf00              NOP      
                  |L6.36|
000024  bf00              NOP                            ;267
;;;278            }
;;;279        }
;;;280    
;;;281        return status;
000026  4620              MOV      r0,r4
;;;282    }
000028  b004              ADD      sp,sp,#0x10
00002a  bd10              POP      {r4,pc}
;;;283    
                          ENDP


                          AREA ||i.LoRaMacMulticastChannelAdd||, CODE, READONLY, ALIGN=1

                  LoRaMacMulticastChannelAdd PROC
;;;191    
;;;192    void LoRaMacMulticastChannelAdd( MulticastParams_t *channelParam )
000000  b510              PUSH     {r4,lr}
;;;193    {
000002  4604              MOV      r4,r0
;;;194        LoRaMacMulticastChannelLink( channelParam );
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       LoRaMacMulticastChannelLink
;;;195    }
00000a  bd10              POP      {r4,pc}
;;;196    
                          ENDP


                          AREA ||i.LoRaMacMulticastChannelRemove||, CODE, READONLY, ALIGN=1

                  LoRaMacMulticastChannelRemove PROC
;;;196    
;;;197    void LoRaMacMulticastChannelRemove( MulticastParams_t *channelParam )
000000  b510              PUSH     {r4,lr}
;;;198    {
000002  4604              MOV      r4,r0
;;;199        LoRaMacMulticastChannelUnlink( channelParam );
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       LoRaMacMulticastChannelUnlink
;;;200    }
00000a  bd10              POP      {r4,pc}
;;;201    
                          ENDP


                          AREA ||i.LoRaMacPrepareFrame||, CODE, READONLY, ALIGN=1

                  LoRaMacPrepareFrame PROC
;;;411    
;;;412    uint8_t LoRaMacPrepareFrame( ChannelParams_t channel,LoRaMacHeader_t *macHdr, LoRaMacFrameCtrl_t *fCtrl, uint8_t *fOpts, uint8_t fPort, void *fBuffer, uint16_t fBufferSize )
000000  b5f8              PUSH     {r3-r7,lr}
;;;413    {
000002  4615              MOV      r5,r2
000004  461e              MOV      r6,r3
000006  9f07              LDR      r7,[sp,#0x1c]
;;;414        uint8_t retStatus;
;;;415    
;;;416        switch( PrepareFrame( macHdr, fCtrl, fPort, fBuffer, fBufferSize ) )
000008  9809              LDR      r0,[sp,#0x24]
00000a  9000              STR      r0,[sp,#0]
00000c  463a              MOV      r2,r7
00000e  4631              MOV      r1,r6
000010  4628              MOV      r0,r5
000012  9b08              LDR      r3,[sp,#0x20]
000014  f7fffffe          BL       PrepareFrame
000018  0003              MOVS     r3,r0
00001a  f7fffffe          BL       __ARM_common_switch8
00001e  0a06              DCB      0x0a,0x06
000020  080f1111          DCB      0x08,0x0f,0x11,0x11
000024  11110a0c          DCB      0x11,0x11,0x0a,0x0c
000028  0d11              DCB      0x0d,0x11
;;;417        {
;;;418            case LORAMAC_STATUS_OK:
;;;419                retStatus = 0U;
00002a  2400              MOVS     r4,#0
;;;420                break;
00002c  e00a              B        |L9.68|
;;;421            case LORAMAC_STATUS_BUSY:
;;;422                retStatus = 1U;
00002e  2401              MOVS     r4,#1
;;;423                break;
000030  e008              B        |L9.68|
;;;424            case LORAMAC_STATUS_NO_NETWORK_JOINED:
;;;425                retStatus = 2U;
000032  2402              MOVS     r4,#2
;;;426                break;
000034  e006              B        |L9.68|
;;;427            case LORAMAC_STATUS_LENGTH_ERROR:
;;;428            case LORAMAC_STATUS_MAC_CMD_LENGTH_ERROR:
000036  bf00              NOP      
;;;429                retStatus = 3U;
000038  2403              MOVS     r4,#3
;;;430                break;
00003a  e003              B        |L9.68|
;;;431            case LORAMAC_STATUS_SERVICE_UNKNOWN:
;;;432                retStatus = 4U;
00003c  2404              MOVS     r4,#4
;;;433                break;
00003e  e001              B        |L9.68|
;;;434            default:
;;;435                retStatus = 1U;
000040  2401              MOVS     r4,#1
;;;436                break;
000042  bf00              NOP      
                  |L9.68|
000044  bf00              NOP                            ;420
;;;437        }
;;;438    
;;;439        return retStatus;
000046  4620              MOV      r0,r4
;;;440    }
000048  bdf8              POP      {r3-r7,pc}
;;;441    
                          ENDP


                          AREA ||i.LoRaMacSend||, CODE, READONLY, ALIGN=2

                  LoRaMacSend PROC
;;;376    
;;;377    uint8_t LoRaMacSend( LoRaMacHeader_t *macHdr, uint8_t *fOpts, uint8_t fPort, void *fBuffer, uint16_t fBufferSize )
000000  b5f8              PUSH     {r3-r7,lr}
;;;378    {
000002  4607              MOV      r7,r0
000004  4615              MOV      r5,r2
000006  461e              MOV      r6,r3
;;;379        uint8_t retStatus;
;;;380    
;;;381        memset1( ( uint8_t* ) &LoRaMacEventInfo, 0, sizeof( LoRaMacEventInfo ) );
000008  2218              MOVS     r2,#0x18
00000a  2100              MOVS     r1,#0
00000c  4812              LDR      r0,|L10.88|
00000e  f7fffffe          BL       memset1
;;;382    
;;;383        switch( Send( macHdr, fPort, fBuffer, fBufferSize ) )
000012  4632              MOV      r2,r6
000014  4629              MOV      r1,r5
000016  4638              MOV      r0,r7
000018  9b06              LDR      r3,[sp,#0x18]
00001a  f7fffffe          BL       Send
00001e  0003              MOVS     r3,r0
000020  f7fffffe          BL       __ARM_common_switch8
000024  0b070910          DCB      0x0b,0x07,0x09,0x10
000028  14141414          DCB      0x14,0x14,0x14,0x14
00002c  0b0d0e12          DCB      0x0b,0x0d,0x0e,0x12
000030  1400              DCB      0x14,0x00
;;;384        {
;;;385            case LORAMAC_STATUS_OK:
;;;386                retStatus = 0U;
000032  2400              MOVS     r4,#0
;;;387                break;
000034  e00c              B        |L10.80|
;;;388            case LORAMAC_STATUS_BUSY:
;;;389                retStatus = 1U;
000036  2401              MOVS     r4,#1
;;;390                break;
000038  e00a              B        |L10.80|
;;;391            case LORAMAC_STATUS_NO_NETWORK_JOINED:
;;;392                retStatus = 2U;
00003a  2402              MOVS     r4,#2
;;;393                break;
00003c  e008              B        |L10.80|
;;;394            case LORAMAC_STATUS_LENGTH_ERROR:
;;;395            case LORAMAC_STATUS_MAC_CMD_LENGTH_ERROR:
00003e  bf00              NOP      
;;;396                retStatus = 3U;
000040  2403              MOVS     r4,#3
;;;397                break;
000042  e005              B        |L10.80|
;;;398            case LORAMAC_STATUS_SERVICE_UNKNOWN:
;;;399                retStatus = 4U;
000044  2404              MOVS     r4,#4
;;;400                break;
000046  e003              B        |L10.80|
;;;401            case LORAMAC_STATUS_DEVICE_OFF:
;;;402                retStatus = 6U;
000048  2406              MOVS     r4,#6
;;;403                break;
00004a  e001              B        |L10.80|
;;;404            default:
;;;405                retStatus = 1U;
00004c  2401              MOVS     r4,#1
;;;406                break;
00004e  bf00              NOP      
                  |L10.80|
000050  bf00              NOP                            ;387
;;;407        }
;;;408    
;;;409        return retStatus;
000052  4620              MOV      r0,r4
;;;410    }
000054  bdf8              POP      {r3-r7,pc}
;;;411    
                          ENDP

000056  0000              DCW      0x0000
                  |L10.88|
                          DCD      LoRaMacEventInfo

                          AREA ||i.LoRaMacSendConfirmedFrame||, CODE, READONLY, ALIGN=2

                  LoRaMacSendConfirmedFrame PROC
;;;329    
;;;330    uint8_t LoRaMacSendConfirmedFrame( uint8_t fPort, void *fBuffer, uint16_t fBufferSize, uint8_t nbRetries )
000000  b5ff              PUSH     {r0-r7,lr}
;;;331    {
000002  b087              SUB      sp,sp,#0x1c
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;332        MibRequestConfirm_t mibGet;
;;;333        McpsReq_t mcpsRequest;
;;;334        uint8_t retStatus;
;;;335    
;;;336        memset1( ( uint8_t* )&LoRaMacEventInfo, 0, sizeof( LoRaMacEventInfo ) );
00000a  2218              MOVS     r2,#0x18
00000c  2100              MOVS     r1,#0
00000e  481a              LDR      r0,|L11.120|
000010  f7fffffe          BL       memset1
;;;337    
;;;338        mibGet.Type = MIB_CHANNELS_DATARATE;
000014  2112              MOVS     r1,#0x12
000016  4668              MOV      r0,sp
000018  7401              STRB     r1,[r0,#0x10]
;;;339        LoRaMacMibGetRequestConfirm( &mibGet );
00001a  a804              ADD      r0,sp,#0x10
00001c  f7fffffe          BL       LoRaMacMibGetRequestConfirm
;;;340    
;;;341        mcpsRequest.Type = MCPS_CONFIRMED;
000020  2101              MOVS     r1,#1
000022  4668              MOV      r0,sp
000024  7001              STRB     r1,[r0,#0]
;;;342        mcpsRequest.Req.Confirmed.fBuffer = fBuffer;
000026  9602              STR      r6,[sp,#8]
;;;343        mcpsRequest.Req.Confirmed.fBufferSize = fBufferSize;
000028  8187              STRH     r7,[r0,#0xc]
;;;344        mcpsRequest.Req.Confirmed.fPort = fPort;
00002a  7105              STRB     r5,[r0,#4]
;;;345        mcpsRequest.Req.Confirmed.NbTrials = nbRetries;
00002c  4669              MOV      r1,sp
00002e  980a              LDR      r0,[sp,#0x28]
000030  73c8              STRB     r0,[r1,#0xf]
;;;346        mcpsRequest.Req.Confirmed.Datarate = mibGet.Param.ChannelsDatarate;
000032  4668              MOV      r0,sp
000034  7d01              LDRB     r1,[r0,#0x14]
000036  7381              STRB     r1,[r0,#0xe]
;;;347    
;;;348        switch( LoRaMacMcpsRequest( &mcpsRequest ) )
000038  f7fffffe          BL       LoRaMacMcpsRequest
00003c  0003              MOVS     r3,r0
00003e  f7fffffe          BL       __ARM_common_switch8
000042  0b07              DCB      0x0b,0x07
000044  09101414          DCB      0x09,0x10,0x14,0x14
000048  14140b0d          DCB      0x14,0x14,0x0b,0x0d
00004c  0e121400          DCB      0x0e,0x12,0x14,0x00
;;;349        {
;;;350            case LORAMAC_STATUS_OK:
;;;351                retStatus = 0U;
000050  2400              MOVS     r4,#0
;;;352                break;
000052  e00c              B        |L11.110|
;;;353            case LORAMAC_STATUS_BUSY:
;;;354                retStatus = 1U;
000054  2401              MOVS     r4,#1
;;;355                break;
000056  e00a              B        |L11.110|
;;;356            case LORAMAC_STATUS_NO_NETWORK_JOINED:
;;;357                retStatus = 2U;
000058  2402              MOVS     r4,#2
;;;358                break;
00005a  e008              B        |L11.110|
;;;359            case LORAMAC_STATUS_LENGTH_ERROR:
;;;360            case LORAMAC_STATUS_MAC_CMD_LENGTH_ERROR:
00005c  bf00              NOP      
;;;361                retStatus = 3U;
00005e  2403              MOVS     r4,#3
;;;362                break;
000060  e005              B        |L11.110|
;;;363            case LORAMAC_STATUS_SERVICE_UNKNOWN:
;;;364                retStatus = 4U;
000062  2404              MOVS     r4,#4
;;;365                break;
000064  e003              B        |L11.110|
;;;366            case LORAMAC_STATUS_DEVICE_OFF:
;;;367                retStatus = 6U;
000066  2406              MOVS     r4,#6
;;;368                break;
000068  e001              B        |L11.110|
;;;369            default:
;;;370                retStatus = 1U;
00006a  2401              MOVS     r4,#1
;;;371                break;
00006c  bf00              NOP      
                  |L11.110|
00006e  bf00              NOP                            ;352
;;;372        }
;;;373    
;;;374        return retStatus;
000070  4620              MOV      r0,r4
;;;375    }
000072  b00b              ADD      sp,sp,#0x2c
000074  bdf0              POP      {r4-r7,pc}
;;;376    
                          ENDP

000076  0000              DCW      0x0000
                  |L11.120|
                          DCD      LoRaMacEventInfo

                          AREA ||i.LoRaMacSendFrame||, CODE, READONLY, ALIGN=2

                  LoRaMacSendFrame PROC
;;;283    
;;;284    uint8_t LoRaMacSendFrame( uint8_t fPort, void *fBuffer, uint16_t fBufferSize )
000000  b5f0              PUSH     {r4-r7,lr}
;;;285    {
000002  b087              SUB      sp,sp,#0x1c
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
000008  4617              MOV      r7,r2
;;;286        MibRequestConfirm_t mibGet;
;;;287        McpsReq_t mcpsRequest;
;;;288        uint8_t retStatus;
;;;289    
;;;290        memset1( ( uint8_t* )&LoRaMacEventInfo, 0, sizeof( LoRaMacEventInfo ) );
00000a  2218              MOVS     r2,#0x18
00000c  2100              MOVS     r1,#0
00000e  4818              LDR      r0,|L12.112|
000010  f7fffffe          BL       memset1
;;;291    
;;;292        mibGet.Type = MIB_CHANNELS_DATARATE;
000014  2112              MOVS     r1,#0x12
000016  4668              MOV      r0,sp
000018  7401              STRB     r1,[r0,#0x10]
;;;293        LoRaMacMibGetRequestConfirm( &mibGet );
00001a  a804              ADD      r0,sp,#0x10
00001c  f7fffffe          BL       LoRaMacMibGetRequestConfirm
;;;294    
;;;295        mcpsRequest.Type = MCPS_UNCONFIRMED;
000020  2100              MOVS     r1,#0
000022  4668              MOV      r0,sp
000024  7001              STRB     r1,[r0,#0]
;;;296        mcpsRequest.Req.Unconfirmed.fBuffer = fBuffer;
000026  9602              STR      r6,[sp,#8]
;;;297        mcpsRequest.Req.Unconfirmed.fBufferSize = fBufferSize;
000028  8187              STRH     r7,[r0,#0xc]
;;;298        mcpsRequest.Req.Unconfirmed.fPort = fPort;
00002a  7105              STRB     r5,[r0,#4]
;;;299        mcpsRequest.Req.Unconfirmed.Datarate = mibGet.Param.ChannelsDatarate;
00002c  7d01              LDRB     r1,[r0,#0x14]
00002e  7381              STRB     r1,[r0,#0xe]
;;;300    
;;;301        switch( LoRaMacMcpsRequest( &mcpsRequest ) )
000030  f7fffffe          BL       LoRaMacMcpsRequest
000034  0003              MOVS     r3,r0
000036  f7fffffe          BL       __ARM_common_switch8
00003a  0b07              DCB      0x0b,0x07
00003c  09101414          DCB      0x09,0x10,0x14,0x14
000040  14140b0d          DCB      0x14,0x14,0x0b,0x0d
000044  0e121400          DCB      0x0e,0x12,0x14,0x00
;;;302        {
;;;303            case LORAMAC_STATUS_OK:
;;;304                retStatus = 0U;
000048  2400              MOVS     r4,#0
;;;305                break;
00004a  e00c              B        |L12.102|
;;;306            case LORAMAC_STATUS_BUSY:
;;;307                retStatus = 1U;
00004c  2401              MOVS     r4,#1
;;;308                break;
00004e  e00a              B        |L12.102|
;;;309            case LORAMAC_STATUS_NO_NETWORK_JOINED:
;;;310                retStatus = 2U;
000050  2402              MOVS     r4,#2
;;;311                break;
000052  e008              B        |L12.102|
;;;312            case LORAMAC_STATUS_LENGTH_ERROR:
;;;313            case LORAMAC_STATUS_MAC_CMD_LENGTH_ERROR:
000054  bf00              NOP      
;;;314                retStatus = 3U;
000056  2403              MOVS     r4,#3
;;;315                break;
000058  e005              B        |L12.102|
;;;316            case LORAMAC_STATUS_SERVICE_UNKNOWN:
;;;317                retStatus = 4U;
00005a  2404              MOVS     r4,#4
;;;318                break;
00005c  e003              B        |L12.102|
;;;319            case LORAMAC_STATUS_DEVICE_OFF:
;;;320                retStatus = 6U;
00005e  2406              MOVS     r4,#6
;;;321                break;
000060  e001              B        |L12.102|
;;;322            default:
;;;323                retStatus = 1U;
000062  2401              MOVS     r4,#1
;;;324                break;
000064  bf00              NOP      
                  |L12.102|
000066  bf00              NOP                            ;305
;;;325        }
;;;326    
;;;327        return retStatus;
000068  4620              MOV      r0,r4
;;;328    }
00006a  b007              ADD      sp,sp,#0x1c
00006c  bdf0              POP      {r4-r7,pc}
;;;329    
                          ENDP

00006e  0000              DCW      0x0000
                  |L12.112|
                          DCD      LoRaMacEventInfo

                          AREA ||i.LoRaMacSendFrameOnChannel||, CODE, READONLY, ALIGN=2

                  LoRaMacSendFrameOnChannel PROC
;;;441    
;;;442    uint8_t LoRaMacSendFrameOnChannel( ChannelParams_t channel )
000000  b513              PUSH     {r0,r1,r4,lr}
;;;443    {
;;;444        memset1( ( uint8_t* ) &LoRaMacEventInfo, 0, sizeof( LoRaMacEventInfo ) );
000002  2218              MOVS     r2,#0x18
000004  2100              MOVS     r1,#0
000006  4804              LDR      r0,|L13.24|
000008  f7fffffe          BL       memset1
;;;445    
;;;446        SendFrameOnChannel( channel );
00000c  9901              LDR      r1,[sp,#4]
00000e  9800              LDR      r0,[sp,#0]
000010  f7fffffe          BL       SendFrameOnChannel
;;;447    
;;;448        /* SendFrameOnChannel has always status "OK" */
;;;449        return 0;
000014  2000              MOVS     r0,#0
;;;450    }
000016  bd1c              POP      {r2-r4,pc}
;;;451    
                          ENDP

                  |L13.24|
                          DCD      LoRaMacEventInfo

                          AREA ||i.LoRaMacSendOnChannel||, CODE, READONLY, ALIGN=2

                  LoRaMacSendOnChannel PROC
;;;451    
;;;452    uint8_t LoRaMacSendOnChannel( ChannelParams_t channel, LoRaMacHeader_t *macHdr, LoRaMacFrameCtrl_t *fCtrl, uint8_t *fOpts, uint8_t fPort, void *fBuffer, uint16_t fBufferSize )
000000  b5ff              PUSH     {r0-r7,lr}
;;;453    {
000002  b085              SUB      sp,sp,#0x14
000004  ad0e              ADD      r5,sp,#0x38
000006  cde0              LDM      r5,{r5-r7}
;;;454        uint8_t status = 0;
000008  2400              MOVS     r4,#0
;;;455    
;;;456        if( ( LoRaMacState & 0x00000001 ) == 0x00000001 )
00000a  480f              LDR      r0,|L14.72|
00000c  7800              LDRB     r0,[r0,#0]  ; LoRaMacState
00000e  07c0              LSLS     r0,r0,#31
000010  0fc0              LSRS     r0,r0,#31
000012  2800              CMP      r0,#0
000014  d002              BEQ      |L14.28|
;;;457        {
;;;458            return 1; // MAC is busy transmitting a previous frame
000016  2001              MOVS     r0,#1
                  |L14.24|
;;;459        }
;;;460    
;;;461        status = LoRaMacPrepareFrame( channel, macHdr, fCtrl, fOpts, fPort, fBuffer, fBufferSize );
;;;462        if( status != 0 )
;;;463        {
;;;464            return status;
;;;465        }
;;;466    
;;;467        LoRaMacEventInfo.TxNbRetries = 0;
;;;468        LoRaMacEventInfo.TxAckReceived = false;
;;;469    
;;;470        return LoRaMacSendFrameOnChannel( channel );
;;;471    }
000018  b009              ADD      sp,sp,#0x24
00001a  bdf0              POP      {r4-r7,pc}
                  |L14.28|
00001c  9811              LDR      r0,[sp,#0x44]         ;461
00001e  4669              MOV      r1,sp                 ;461
000020  c1e0              STM      r1!,{r5-r7}           ;461
000022  9003              STR      r0,[sp,#0xc]          ;461
000024  a805              ADD      r0,sp,#0x14           ;461
000026  c80f              LDM      r0,{r0-r3}            ;461
000028  f7fffffe          BL       LoRaMacPrepareFrame
00002c  4604              MOV      r4,r0                 ;461
00002e  2c00              CMP      r4,#0                 ;462
000030  d001              BEQ      |L14.54|
000032  4620              MOV      r0,r4                 ;464
000034  e7f0              B        |L14.24|
                  |L14.54|
000036  2000              MOVS     r0,#0                 ;467
000038  4904              LDR      r1,|L14.76|
00003a  7088              STRB     r0,[r1,#2]            ;467
00003c  7048              STRB     r0,[r1,#1]            ;468
00003e  9906              LDR      r1,[sp,#0x18]         ;470
000040  9805              LDR      r0,[sp,#0x14]         ;470
000042  f7fffffe          BL       LoRaMacSendFrameOnChannel
000046  e7e7              B        |L14.24|
;;;472    
                          ENDP

                  |L14.72|
                          DCD      LoRaMacState
                  |L14.76|
                          DCD      LoRaMacEventInfo

                          AREA ||i.LoRaMacSetAdrOn||, CODE, READONLY, ALIGN=1

                  LoRaMacSetAdrOn PROC
;;;151    
;;;152    void LoRaMacSetAdrOn( bool enable )
000000  b53e              PUSH     {r1-r5,lr}
;;;153    {
000002  4604              MOV      r4,r0
;;;154        MibRequestConfirm_t mibSet;
;;;155    
;;;156        mibSet.Type = MIB_ADR;
000004  2102              MOVS     r1,#2
000006  4668              MOV      r0,sp
000008  7001              STRB     r1,[r0,#0]
;;;157        mibSet.Param.AdrEnable = enable;
00000a  7104              STRB     r4,[r0,#4]
;;;158    
;;;159        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;160    }
000010  bd3e              POP      {r1-r5,pc}
;;;161    
                          ENDP


                          AREA ||i.LoRaMacSetChannel||, CODE, READONLY, ALIGN=1

                  LoRaMacSetChannel PROC
;;;497    
;;;498    void LoRaMacSetChannel( uint8_t id, ChannelParams_t params )
000000  b537              PUSH     {r0-r2,r4,r5,lr}
;;;499    {
000002  4604              MOV      r4,r0
;;;500        LoRaMacChannelAdd( id, params );
000004  4620              MOV      r0,r4
000006  9a02              LDR      r2,[sp,#8]
000008  9901              LDR      r1,[sp,#4]
00000a  f7fffffe          BL       LoRaMacChannelAdd
;;;501    }
00000e  bd3e              POP      {r1-r5,pc}
;;;502    
                          ENDP


                          AREA ||i.LoRaMacSetChannelsDatarate||, CODE, READONLY, ALIGN=1

                  LoRaMacSetChannelsDatarate PROC
;;;582    
;;;583    void LoRaMacSetChannelsDatarate( int8_t datarate )
000000  b53e              PUSH     {r1-r5,lr}
;;;584    {
000002  4604              MOV      r4,r0
;;;585        MibRequestConfirm_t mibSet;
;;;586    
;;;587        mibSet.Type = MIB_CHANNELS_DATARATE;
000004  2112              MOVS     r1,#0x12
000006  4668              MOV      r0,sp
000008  7001              STRB     r1,[r0,#0]
;;;588        mibSet.Param.ChannelsDatarate = datarate;
00000a  7104              STRB     r4,[r0,#4]
;;;589    
;;;590        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;591    }
000010  bd3e              POP      {r1-r5,pc}
;;;592    
                          ENDP


                          AREA ||i.LoRaMacSetChannelsMask||, CODE, READONLY, ALIGN=1

                  LoRaMacSetChannelsMask PROC
;;;512    
;;;513    void LoRaMacSetChannelsMask( uint16_t *mask )
000000  b53e              PUSH     {r1-r5,lr}
;;;514    {
000002  4604              MOV      r4,r0
;;;515        MibRequestConfirm_t mibSet;
;;;516    
;;;517        mibSet.Type = MIB_CHANNELS_MASK;
000004  200b              MOVS     r0,#0xb
000006  4669              MOV      r1,sp
000008  7008              STRB     r0,[r1,#0]
;;;518        mibSet.Param.ChannelsMask = mask;
00000a  9401              STR      r4,[sp,#4]
;;;519    
;;;520        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;521    }
000012  bd3e              POP      {r1-r5,pc}
;;;522    
                          ENDP


                          AREA ||i.LoRaMacSetChannelsNbRep||, CODE, READONLY, ALIGN=1

                  LoRaMacSetChannelsNbRep PROC
;;;522    
;;;523    void LoRaMacSetChannelsNbRep( uint8_t nbRep )
000000  b53e              PUSH     {r1-r5,lr}
;;;524    {
000002  4604              MOV      r4,r0
;;;525        MibRequestConfirm_t mibSet;
;;;526    
;;;527        mibSet.Type = MIB_CHANNELS_NB_REP;
000004  210c              MOVS     r1,#0xc
000006  4668              MOV      r0,sp
000008  7001              STRB     r1,[r0,#0]
;;;528        mibSet.Param.ChannelNbRep = nbRep;
00000a  7104              STRB     r4,[r0,#4]
;;;529    
;;;530        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;531    }
000010  bd3e              POP      {r1-r5,pc}
;;;532    
                          ENDP


                          AREA ||i.LoRaMacSetChannelsTxPower||, CODE, READONLY, ALIGN=1

                  LoRaMacSetChannelsTxPower PROC
;;;592    
;;;593    void LoRaMacSetChannelsTxPower( int8_t txPower )
000000  b53e              PUSH     {r1-r5,lr}
;;;594    {
000002  4604              MOV      r4,r0
;;;595        MibRequestConfirm_t mibSet;
;;;596    
;;;597        mibSet.Type = MIB_CHANNELS_TX_POWER;
000004  2113              MOVS     r1,#0x13
000006  4668              MOV      r0,sp
000008  7001              STRB     r1,[r0,#0]
;;;598        mibSet.Param.ChannelsTxPower = txPower;
00000a  7104              STRB     r4,[r0,#4]
;;;599    
;;;600        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;601    }
000010  bd3e              POP      {r1-r5,pc}
;;;602    
                          ENDP


                          AREA ||i.LoRaMacSetDeviceClass||, CODE, READONLY, ALIGN=1

                  LoRaMacSetDeviceClass PROC
;;;472    
;;;473    void LoRaMacSetDeviceClass( DeviceClass_t deviceClass )
000000  b53e              PUSH     {r1-r5,lr}
;;;474    {
000002  4604              MOV      r4,r0
;;;475        MibRequestConfirm_t mibSet;
;;;476    
;;;477        mibSet.Type = MIB_DEVICE_CLASS;
000004  2100              MOVS     r1,#0
000006  4668              MOV      r0,sp
000008  7001              STRB     r1,[r0,#0]
;;;478        mibSet.Param.Class = deviceClass;
00000a  7104              STRB     r4,[r0,#4]
;;;479    
;;;480        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;481    }
000010  bd3e              POP      {r1-r5,pc}
;;;482    
                          ENDP


                          AREA ||i.LoRaMacSetDutyCycleOn||, CODE, READONLY, ALIGN=1

                  LoRaMacSetDutyCycleOn PROC
;;;492    
;;;493    void LoRaMacSetDutyCycleOn( bool enable )
000000  b510              PUSH     {r4,lr}
;;;494    {
000002  4604              MOV      r4,r0
;;;495        LoRaMacTestSetDutyCycleOn( enable );
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       LoRaMacTestSetDutyCycleOn
;;;496    }
00000a  bd10              POP      {r4,pc}
;;;497    
                          ENDP


                          AREA ||i.LoRaMacSetJoinAcceptDelay1||, CODE, READONLY, ALIGN=1

                  LoRaMacSetJoinAcceptDelay1 PROC
;;;562    
;;;563    void LoRaMacSetJoinAcceptDelay1( uint32_t delay )
000000  b53e              PUSH     {r1-r5,lr}
;;;564    {
000002  4604              MOV      r4,r0
;;;565        MibRequestConfirm_t mibSet;
;;;566    
;;;567        mibSet.Type = MIB_JOIN_ACCEPT_DELAY_1;
000004  2010              MOVS     r0,#0x10
000006  4669              MOV      r1,sp
000008  7008              STRB     r0,[r1,#0]
;;;568        mibSet.Param.JoinAcceptDelay1 = delay;
00000a  9401              STR      r4,[sp,#4]
;;;569    
;;;570        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;571    }
000012  bd3e              POP      {r1-r5,pc}
;;;572    
                          ENDP


                          AREA ||i.LoRaMacSetJoinAcceptDelay2||, CODE, READONLY, ALIGN=1

                  LoRaMacSetJoinAcceptDelay2 PROC
;;;572    
;;;573    void LoRaMacSetJoinAcceptDelay2( uint32_t delay )
000000  b53e              PUSH     {r1-r5,lr}
;;;574    {
000002  4604              MOV      r4,r0
;;;575        MibRequestConfirm_t mibSet;
;;;576    
;;;577        mibSet.Type = MIB_JOIN_ACCEPT_DELAY_2;
000004  2011              MOVS     r0,#0x11
000006  4669              MOV      r1,sp
000008  7008              STRB     r0,[r1,#0]
;;;578        mibSet.Param.JoinAcceptDelay2 = delay;
00000a  9401              STR      r4,[sp,#4]
;;;579    
;;;580        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;581    }
000012  bd3e              POP      {r1-r5,pc}
;;;582    
                          ENDP


                          AREA ||i.LoRaMacSetMaxRxWindow||, CODE, READONLY, ALIGN=1

                  LoRaMacSetMaxRxWindow PROC
;;;532    
;;;533    void LoRaMacSetMaxRxWindow( uint32_t delay )
000000  b53e              PUSH     {r1-r5,lr}
;;;534    {
000002  4604              MOV      r4,r0
;;;535        MibRequestConfirm_t mibSet;
;;;536    
;;;537        mibSet.Type = MIB_MAX_RX_WINDOW_DURATION;
000004  200d              MOVS     r0,#0xd
000006  4669              MOV      r1,sp
000008  7008              STRB     r0,[r1,#0]
;;;538        mibSet.Param.MaxRxWindow = delay;
00000a  9401              STR      r4,[sp,#4]
;;;539    
;;;540        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;541    }
000012  bd3e              POP      {r1-r5,pc}
;;;542    
                          ENDP


                          AREA ||i.LoRaMacSetMicTest||, CODE, READONLY, ALIGN=1

                  LoRaMacSetMicTest PROC
;;;624    
;;;625    void LoRaMacSetMicTest( uint16_t txPacketCounter )
000000  b510              PUSH     {r4,lr}
;;;626    {
000002  4604              MOV      r4,r0
;;;627        LoRaMacTestSetMic( txPacketCounter );
000004  4620              MOV      r0,r4
000006  f7fffffe          BL       LoRaMacTestSetMic
;;;628    }
00000a  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i.LoRaMacSetPublicNetwork||, CODE, READONLY, ALIGN=1

                  LoRaMacSetPublicNetwork PROC
;;;482    
;;;483    void LoRaMacSetPublicNetwork( bool enable )
000000  b53e              PUSH     {r1-r5,lr}
;;;484    {
000002  4604              MOV      r4,r0
;;;485        MibRequestConfirm_t mibSet;
;;;486    
;;;487        mibSet.Type = MIB_PUBLIC_NETWORK;
000004  2107              MOVS     r1,#7
000006  4668              MOV      r0,sp
000008  7001              STRB     r1,[r0,#0]
;;;488        mibSet.Param.EnablePublicNetwork = enable;
00000a  7104              STRB     r4,[r0,#4]
;;;489    
;;;490        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;491    }
000010  bd3e              POP      {r1-r5,pc}
;;;492    
                          ENDP


                          AREA ||i.LoRaMacSetReceiveDelay1||, CODE, READONLY, ALIGN=1

                  LoRaMacSetReceiveDelay1 PROC
;;;542    
;;;543    void LoRaMacSetReceiveDelay1( uint32_t delay )
000000  b53e              PUSH     {r1-r5,lr}
;;;544    {
000002  4604              MOV      r4,r0
;;;545        MibRequestConfirm_t mibSet;
;;;546    
;;;547        mibSet.Type = MIB_RECEIVE_DELAY_1;
000004  200e              MOVS     r0,#0xe
000006  4669              MOV      r1,sp
000008  7008              STRB     r0,[r1,#0]
;;;548        mibSet.Param.ReceiveDelay1 = delay;
00000a  9401              STR      r4,[sp,#4]
;;;549    
;;;550        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;551    }
000012  bd3e              POP      {r1-r5,pc}
;;;552    
                          ENDP


                          AREA ||i.LoRaMacSetReceiveDelay2||, CODE, READONLY, ALIGN=1

                  LoRaMacSetReceiveDelay2 PROC
;;;552    
;;;553    void LoRaMacSetReceiveDelay2( uint32_t delay )
000000  b53e              PUSH     {r1-r5,lr}
;;;554    {
000002  4604              MOV      r4,r0
;;;555        MibRequestConfirm_t mibSet;
;;;556    
;;;557        mibSet.Type = MIB_RECEIVE_DELAY_2;
000004  200f              MOVS     r0,#0xf
000006  4669              MOV      r1,sp
000008  7008              STRB     r0,[r1,#0]
;;;558        mibSet.Param.ReceiveDelay2 = delay;
00000a  9401              STR      r4,[sp,#4]
;;;559    
;;;560        LoRaMacMibSetRequestConfirm( &mibSet );
00000c  4668              MOV      r0,sp
00000e  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;561    }
000012  bd3e              POP      {r1-r5,pc}
;;;562    
                          ENDP


                          AREA ||i.LoRaMacSetRx2Channel||, CODE, READONLY, ALIGN=1

                  LoRaMacSetRx2Channel PROC
;;;502    
;;;503    void LoRaMacSetRx2Channel( Rx2ChannelParams_t param )
000000  b503              PUSH     {r0,r1,lr}
;;;504    {
000002  b083              SUB      sp,sp,#0xc
;;;505        MibRequestConfirm_t mibSet;
;;;506    
;;;507        mibSet.Type = MIB_RX2_CHANNEL;
000004  200a              MOVS     r0,#0xa
000006  4669              MOV      r1,sp
000008  7008              STRB     r0,[r1,#0]
;;;508        mibSet.Param.Rx2Channel = param;
00000a  9904              LDR      r1,[sp,#0x10]
00000c  9803              LDR      r0,[sp,#0xc]
00000e  9102              STR      r1,[sp,#8]
000010  9001              STR      r0,[sp,#4]
;;;509    
;;;510        LoRaMacMibSetRequestConfirm( &mibSet );
000012  4668              MOV      r0,sp
000014  f7fffffe          BL       LoRaMacMibSetRequestConfirm
;;;511    }
000018  b005              ADD      sp,sp,#0x14
00001a  bd00              POP      {pc}
;;;512    
                          ENDP


                          AREA ||i.McpsConfirm||, CODE, READONLY, ALIGN=2

                  McpsConfirm PROC
;;;50      */
;;;51     static void McpsConfirm( McpsConfirm_t *mcpsConfirm )
000000  b510              PUSH     {r4,lr}
;;;52     {
000002  4604              MOV      r4,r0
;;;53         LoRaMacEventInfo.Status = mcpsConfirm->Status;
000004  7860              LDRB     r0,[r4,#1]
000006  4912              LDR      r1,|L31.80|
000008  7008              STRB     r0,[r1,#0]
;;;54         LoRaMacEventFlags.Bits.Tx = 1;
00000a  4812              LDR      r0,|L31.84|
00000c  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
00000e  0840              LSRS     r0,r0,#1
000010  0040              LSLS     r0,r0,#1
000012  1c40              ADDS     r0,r0,#1
000014  490f              LDR      r1,|L31.84|
000016  7008              STRB     r0,[r1,#0]
;;;55     
;;;56         LoRaMacEventInfo.TxDatarate = mcpsConfirm->Datarate;
000018  78a0              LDRB     r0,[r4,#2]
00001a  490d              LDR      r1,|L31.80|
00001c  70c8              STRB     r0,[r1,#3]
;;;57         LoRaMacEventInfo.TxNbRetries = mcpsConfirm->NbRetries;
00001e  7960              LDRB     r0,[r4,#5]
000020  7088              STRB     r0,[r1,#2]
;;;58         LoRaMacEventInfo.TxAckReceived = mcpsConfirm->AckReceived;
000022  7920              LDRB     r0,[r4,#4]
000024  7048              STRB     r0,[r1,#1]
;;;59     
;;;60         if( ( LoRaMacFlags.Bits.McpsInd != 1 ) && ( LoRaMacFlags.Bits.MlmeReq != 1 ) )
000026  480c              LDR      r0,|L31.88|
000028  7800              LDRB     r0,[r0,#0]  ; LoRaMacFlags
00002a  0780              LSLS     r0,r0,#30
00002c  0fc0              LSRS     r0,r0,#31
00002e  2800              CMP      r0,#0
000030  d10c              BNE      |L31.76|
000032  4809              LDR      r0,|L31.88|
000034  7800              LDRB     r0,[r0,#0]  ; LoRaMacFlags
000036  0740              LSLS     r0,r0,#29
000038  0fc0              LSRS     r0,r0,#31
00003a  2800              CMP      r0,#0
00003c  d106              BNE      |L31.76|
;;;61         {
;;;62             LoRaMacCallbacks.MacEvent( &LoRaMacEventFlags, &LoRaMacEventInfo );
00003e  4807              LDR      r0,|L31.92|
000040  6802              LDR      r2,[r0,#0]  ; LoRaMacCallbacks
000042  4804              LDR      r0,|L31.84|
000044  4790              BLX      r2
;;;63             LoRaMacEventFlags.Value = 0;
000046  2000              MOVS     r0,#0
000048  4902              LDR      r1,|L31.84|
00004a  7008              STRB     r0,[r1,#0]
                  |L31.76|
;;;64         }
;;;65     }
00004c  bd10              POP      {r4,pc}
;;;66     
                          ENDP

00004e  0000              DCW      0x0000
                  |L31.80|
                          DCD      LoRaMacEventInfo
                  |L31.84|
                          DCD      LoRaMacEventFlags
                  |L31.88|
                          DCD      LoRaMacFlags
                  |L31.92|
                          DCD      LoRaMacCallbacks

                          AREA ||i.McpsIndication||, CODE, READONLY, ALIGN=2

                  McpsIndication PROC
;;;72      */
;;;73     static void McpsIndication( McpsIndication_t *mcpsIndication )
000000  b510              PUSH     {r4,lr}
;;;74     {
000002  4604              MOV      r4,r0
;;;75         LoRaMacEventInfo.Status = mcpsIndication->Status;
000004  7860              LDRB     r0,[r4,#1]
000006  491e              LDR      r1,|L32.128|
000008  7008              STRB     r0,[r1,#0]
;;;76         LoRaMacEventFlags.Bits.Rx = 1;
00000a  481e              LDR      r0,|L32.132|
00000c  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
00000e  2102              MOVS     r1,#2
000010  4388              BICS     r0,r0,r1
000012  1c80              ADDS     r0,r0,#2
000014  491b              LDR      r1,|L32.132|
000016  7008              STRB     r0,[r1,#0]
;;;77         LoRaMacEventFlags.Bits.RxSlot = mcpsIndication->RxSlot;
000018  4608              MOV      r0,r1
00001a  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
00001c  2130              MOVS     r1,#0x30
00001e  4388              BICS     r0,r0,r1
000020  7c61              LDRB     r1,[r4,#0x11]
000022  0109              LSLS     r1,r1,#4
000024  2230              MOVS     r2,#0x30
000026  4011              ANDS     r1,r1,r2
000028  4308              ORRS     r0,r0,r1
00002a  4916              LDR      r1,|L32.132|
00002c  7008              STRB     r0,[r1,#0]
;;;78         LoRaMacEventFlags.Bits.Multicast = mcpsIndication->Multicast;
00002e  4608              MOV      r0,r1
000030  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
000032  2108              MOVS     r1,#8
000034  4388              BICS     r0,r0,r1
000036  78a1              LDRB     r1,[r4,#2]
000038  00c9              LSLS     r1,r1,#3
00003a  2208              MOVS     r2,#8
00003c  4011              ANDS     r1,r1,r2
00003e  4308              ORRS     r0,r0,r1
000040  4910              LDR      r1,|L32.132|
000042  7008              STRB     r0,[r1,#0]
;;;79         if( mcpsIndication->RxData == true )
000044  7b60              LDRB     r0,[r4,#0xd]
000046  2801              CMP      r0,#1
000048  d106              BNE      |L32.88|
;;;80         {
;;;81             LoRaMacEventFlags.Bits.RxData = 1;
00004a  4608              MOV      r0,r1
00004c  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
00004e  2104              MOVS     r1,#4
000050  4388              BICS     r0,r0,r1
000052  1d00              ADDS     r0,r0,#4
000054  490b              LDR      r1,|L32.132|
000056  7008              STRB     r0,[r1,#0]
                  |L32.88|
;;;82         }
;;;83     
;;;84         LoRaMacEventInfo.RxPort = mcpsIndication->Port;
000058  78e0              LDRB     r0,[r4,#3]
00005a  4909              LDR      r1,|L32.128|
00005c  7108              STRB     r0,[r1,#4]
;;;85         LoRaMacEventInfo.RxBuffer = mcpsIndication->Buffer;
00005e  68a0              LDR      r0,[r4,#8]
000060  6088              STR      r0,[r1,#8]  ; LoRaMacEventInfo
;;;86         LoRaMacEventInfo.RxBufferSize = mcpsIndication->BufferSize;
000062  7b20              LDRB     r0,[r4,#0xc]
000064  7308              STRB     r0,[r1,#0xc]
;;;87         LoRaMacEventInfo.RxRssi = mcpsIndication->Rssi;
000066  89e0              LDRH     r0,[r4,#0xe]
000068  81c8              STRH     r0,[r1,#0xe]
;;;88         LoRaMacEventInfo.RxSnr = mcpsIndication->Snr;
00006a  7c20              LDRB     r0,[r4,#0x10]
00006c  7408              STRB     r0,[r1,#0x10]
;;;89         DEBUG(3,"Rx = %d RxBufferSize = %d\r\n",LoRaMacEventFlags.Bits.Rx,LoRaMacEventInfo.RxBufferSize);
;;;90         LoRaMacCallbacks.MacEvent( &LoRaMacEventFlags, &LoRaMacEventInfo );
00006e  4806              LDR      r0,|L32.136|
000070  6802              LDR      r2,[r0,#0]  ; LoRaMacCallbacks
000072  4804              LDR      r0,|L32.132|
000074  4790              BLX      r2
;;;91         LoRaMacEventFlags.Value = 0;
000076  2000              MOVS     r0,#0
000078  4902              LDR      r1,|L32.132|
00007a  7008              STRB     r0,[r1,#0]
;;;92     }
00007c  bd10              POP      {r4,pc}
;;;93     
                          ENDP

00007e  0000              DCW      0x0000
                  |L32.128|
                          DCD      LoRaMacEventInfo
                  |L32.132|
                          DCD      LoRaMacEventFlags
                  |L32.136|
                          DCD      LoRaMacCallbacks

                          AREA ||i.MlmeConfirm||, CODE, READONLY, ALIGN=2

                  MlmeConfirm PROC
;;;99      */
;;;100    static void MlmeConfirm( MlmeConfirm_t *mlmeConfirm )
000000  b510              PUSH     {r4,lr}
;;;101    {
000002  4604              MOV      r4,r0
;;;102        if( mlmeConfirm->Status == LORAMAC_EVENT_INFO_STATUS_OK )
000004  7860              LDRB     r0,[r4,#1]
000006  2800              CMP      r0,#0
000008  d13b              BNE      |L33.130|
;;;103        {
;;;104            switch( mlmeConfirm->MlmeRequest )
00000a  7820              LDRB     r0,[r4,#0]
00000c  2800              CMP      r0,#0
00000e  d002              BEQ      |L33.22|
000010  2801              CMP      r0,#1
000012  d134              BNE      |L33.126|
000014  e018              B        |L33.72|
                  |L33.22|
;;;105            {
;;;106                case MLME_JOIN:
;;;107                {
;;;108                     // Status is OK, node has joined the network
;;;109                    LoRaMacEventInfo.Status = mlmeConfirm->Status;
000016  7860              LDRB     r0,[r4,#1]
000018  4921              LDR      r1,|L33.160|
00001a  7008              STRB     r0,[r1,#0]
;;;110                    LoRaMacEventFlags.Bits.Tx = 1;
00001c  4821              LDR      r0,|L33.164|
00001e  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
000020  0840              LSRS     r0,r0,#1
000022  0040              LSLS     r0,r0,#1
000024  1c40              ADDS     r0,r0,#1
000026  491f              LDR      r1,|L33.164|
000028  7008              STRB     r0,[r1,#0]
;;;111                    LoRaMacEventFlags.Bits.Rx = 1;
00002a  4608              MOV      r0,r1
00002c  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
00002e  2102              MOVS     r1,#2
000030  4388              BICS     r0,r0,r1
000032  1c80              ADDS     r0,r0,#2
000034  491b              LDR      r1,|L33.164|
000036  7008              STRB     r0,[r1,#0]
;;;112                    LoRaMacEventFlags.Bits.JoinAccept = 1;
000038  4608              MOV      r0,r1
00003a  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
00003c  2180              MOVS     r1,#0x80
00003e  4388              BICS     r0,r0,r1
000040  3080              ADDS     r0,r0,#0x80
000042  4918              LDR      r1,|L33.164|
000044  7008              STRB     r0,[r1,#0]
;;;113                   
;;;114                    break;
000046  e01b              B        |L33.128|
                  |L33.72|
;;;115                }
;;;116                case MLME_LINK_CHECK:
;;;117                {
;;;118                    LoRaMacEventFlags.Bits.Tx = 1;
000048  4816              LDR      r0,|L33.164|
00004a  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
00004c  0840              LSRS     r0,r0,#1
00004e  0040              LSLS     r0,r0,#1
000050  1c40              ADDS     r0,r0,#1
000052  4914              LDR      r1,|L33.164|
000054  7008              STRB     r0,[r1,#0]
;;;119                    LoRaMacEventFlags.Bits.Rx = 1;
000056  4608              MOV      r0,r1
000058  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
00005a  2102              MOVS     r1,#2
00005c  4388              BICS     r0,r0,r1
00005e  1c80              ADDS     r0,r0,#2
000060  4910              LDR      r1,|L33.164|
000062  7008              STRB     r0,[r1,#0]
;;;120                    LoRaMacEventFlags.Bits.LinkCheck = 1;
000064  4608              MOV      r0,r1
000066  7800              LDRB     r0,[r0,#0]  ; LoRaMacEventFlags
000068  2140              MOVS     r1,#0x40
00006a  4388              BICS     r0,r0,r1
00006c  3040              ADDS     r0,r0,#0x40
00006e  490d              LDR      r1,|L33.164|
000070  7008              STRB     r0,[r1,#0]
;;;121    
;;;122                    LoRaMacEventInfo.DemodMargin = mlmeConfirm->DemodMargin;
000072  7c20              LDRB     r0,[r4,#0x10]
000074  490a              LDR      r1,|L33.160|
000076  7508              STRB     r0,[r1,#0x14]
;;;123                    LoRaMacEventInfo.NbGateways = mlmeConfirm->NbGateways;
000078  7c60              LDRB     r0,[r4,#0x11]
00007a  7548              STRB     r0,[r1,#0x15]
;;;124                    
;;;125                    break;
00007c  e000              B        |L33.128|
                  |L33.126|
;;;126                }
;;;127                default:
;;;128                    break;
00007e  bf00              NOP      
                  |L33.128|
000080  bf00              NOP                            ;114
                  |L33.130|
;;;129            }
;;;130        }
;;;131    
;;;132        if( LoRaMacFlags.Bits.McpsInd != 1 )
000082  4809              LDR      r0,|L33.168|
000084  7800              LDRB     r0,[r0,#0]  ; LoRaMacFlags
000086  0780              LSLS     r0,r0,#30
000088  0fc0              LSRS     r0,r0,#31
00008a  2800              CMP      r0,#0
00008c  d107              BNE      |L33.158|
;;;133        {
;;;134            LoRaMacCallbacks.MacEvent( &LoRaMacEventFlags, &LoRaMacEventInfo );
00008e  4807              LDR      r0,|L33.172|
000090  4903              LDR      r1,|L33.160|
000092  6802              LDR      r2,[r0,#0]  ; LoRaMacCallbacks
000094  4803              LDR      r0,|L33.164|
000096  4790              BLX      r2
;;;135            LoRaMacEventFlags.Value = 0;
000098  2000              MOVS     r0,#0
00009a  4902              LDR      r1,|L33.164|
00009c  7008              STRB     r0,[r1,#0]
                  |L33.158|
;;;136        }
;;;137    }
00009e  bd10              POP      {r4,pc}
;;;138    
                          ENDP

                  |L33.160|
                          DCD      LoRaMacEventInfo
                  |L33.164|
                          DCD      LoRaMacEventFlags
                  |L33.168|
                          DCD      LoRaMacFlags
                  |L33.172|
                          DCD      LoRaMacCallbacks

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  LoRaMacEventInfo
                          %        24
                  LoRaMacPrimitives
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  LoRaMacEventFlags
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  LoRaMacCallback
                          DCD      0x00000000
                  LoRaMacCallbacks
                          %        8

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L205.24|
                  |L205.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L205.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L205.14|
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\Lib\\LoRawan-node\\mac\\LoRaMac-api-v3.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_LoRaMac_api_v3_c_a838fd61____REV16|
#line 388 "..\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___16_LoRaMac_api_v3_c_a838fd61____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_LoRaMac_api_v3_c_a838fd61____REVSH|
#line 402
|__asm___16_LoRaMac_api_v3_c_a838fd61____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
